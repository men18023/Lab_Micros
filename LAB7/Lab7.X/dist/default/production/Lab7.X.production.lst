

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 18 17:30:52 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  01E8                     __pidataBANK0:
   216                           
   217                           ;initializer for _display
   218  01E8  343F               	retlw	63
   219  01E9  3406               	retlw	6
   220  01EA  345B               	retlw	91
   221  01EB  344F               	retlw	79
   222  01EC  3466               	retlw	102
   223  01ED  346D               	retlw	109
   224  01EE  347D               	retlw	125
   225  01EF  3407               	retlw	7
   226  01F0  347F               	retlw	127
   227  01F1  346F               	retlw	111
   228                           
   229                           	psect	nvCOMMON
   230  007A                     __pnvCOMMON:
   231  007A                     _unidad:
   232  007A                     	ds	1
   233                           
   234                           	psect	nvBANK0
   235  0032                     __pnvBANK0:
   236  0032                     _decena:
   237  0032                     	ds	1
   238  0033                     _centena:
   239  0033                     	ds	1
   240  0034                     _cont:
   241  0034                     	ds	1
   242  0009                     _PORTE	set	9
   243  0007                     _PORTC	set	7
   244  0006                     _PORTB	set	6
   245  0005                     _PORTA	set	5
   246  0006                     _PORTBbits	set	6
   247  0001                     _TMR0	set	1
   248  000B                     _INTCONbits	set	11
   249  0008                     _PORTD	set	8
   250  0009                     _PORTEbits	set	9
   251  0058                     _RBIF	set	88
   252  005A                     _T0IF	set	90
   253  0096                     _IOCBbits	set	150
   254  0095                     _WPUB	set	149
   255  0081                     _OPTION_REGbits	set	129
   256  008F                     _OSCCONbits	set	143
   257  0089                     _TRISE	set	137
   258  0088                     _TRISD	set	136
   259  0087                     _TRISC	set	135
   260  0085                     _TRISA	set	133
   261  0086                     _TRISBbits	set	134
   262  0189                     _ANSELH	set	393
   263  0188                     _ANSEL	set	392
   264                           
   265                           	psect	cinit
   266  0011                     start_initialization:	
   267                           ; #config settings
   268                           
   269  0011                     __initialization:
   270                           
   271                           ; Initialize objects allocated to BANK0
   272  0011  1383               	bcf	3,7	;select IRP bank0
   273  0012  302A               	movlw	low (__pdataBANK0+10)
   274  0013  00FD               	movwf	btemp+-1
   275  0014  3001               	movlw	high __pidataBANK0
   276  0015  00FE               	movwf	btemp
   277  0016  30E8               	movlw	low __pidataBANK0
   278  0017  00FF               	movwf	btemp+1
   279  0018  3020               	movlw	low __pdataBANK0
   280  0019  0084               	movwf	4
   281  001A  120A  118A  21D9  120A  118A  	fcall	init_ram0
   282                           
   283                           ; Clear objects allocated to COMMON
   284  001F  01F8               	clrf	__pbssCOMMON& (0+127)
   285  0020  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   286  0021                     end_of_initialization:	
   287                           ;End of C runtime variable initialization code
   288                           
   289  0021                     __end_of__initialization:
   290  0021  0183               	clrf	3
   291  0022  120A  118A  29C1   	ljmp	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMMON
   294  0078                     __pbssCOMMON:
   295  0078                     _multi:
   296  0078                     	ds	2
   297                           
   298                           	psect	dataBANK0
   299  0020                     __pdataBANK0:
   300  0020                     _display:
   301  0020                     	ds	10
   302                           
   303                           	psect	inittext
   304  01D5                     init_fetch0:	
   305                           ;	Called with low address in FSR and high address in W
   306                           
   307  01D5  087E               	movf	btemp,w
   308  01D6  008A               	movwf	10
   309  01D7  087F               	movf	btemp+1,w
   310  01D8  0082               	movwf	2
   311  01D9                     init_ram0:	
   312                           ;Called with:
   313                           ;	high address of idata address in btemp 
   314                           ;	low address of idata address in btemp+1 
   315                           ;	low address of data in FSR
   316                           ;	high address + 1 of data in btemp-1
   317                           
   318  01D9  120A  118A  21D5  120A  118A  	fcall	init_fetch0
   319  01DE  0080               	movwf	0
   320  01DF  0A84               	incf	4,f
   321  01E0  0804               	movf	4,w
   322  01E1  067D               	xorwf	btemp+-1,w
   323  01E2  1903               	btfsc	3,2
   324  01E3  3400               	retlw	0
   325  01E4  0AFF               	incf	btemp+1,f
   326  01E5  1903               	btfsc	3,2
   327  01E6  0AFE               	incf	btemp,f
   328  01E7  29D9               	goto	init_ram0
   329                           
   330                           	psect	cstackCOMMON
   331  0070                     __pcstackCOMMON:
   332  0070                     ?_setup:
   333  0070                     ?_division:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_isr:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ??_isr:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?_main:	
   343                           ; 1 bytes @ 0x0
   344                           
   345                           
   346                           ; 1 bytes @ 0x0
   347  0070                     	ds	3
   348  0073                     ??_setup:
   349  0073                     ?___awdiv:	
   350                           ; 1 bytes @ 0x3
   351                           
   352  0073                     ?___awmod:	
   353                           ; 2 bytes @ 0x3
   354                           
   355  0073                     ___awdiv@divisor:	
   356                           ; 2 bytes @ 0x3
   357                           
   358  0073                     ___awmod@divisor:	
   359                           ; 2 bytes @ 0x3
   360                           
   361                           
   362                           ; 2 bytes @ 0x3
   363  0073                     	ds	2
   364  0075                     ___awdiv@dividend:
   365  0075                     ___awmod@dividend:	
   366                           ; 2 bytes @ 0x5
   367                           
   368                           
   369                           ; 2 bytes @ 0x5
   370  0075                     	ds	2
   371  0077                     ??___awdiv:
   372  0077                     ??___awmod:	
   373                           ; 1 bytes @ 0x7
   374                           
   375                           
   376                           ; 1 bytes @ 0x7
   377  0077                     	ds	1
   378                           
   379                           	psect	cstackBANK0
   380  002A                     __pcstackBANK0:
   381  002A                     ___awdiv@counter:
   382  002A                     ___awmod@counter:	
   383                           ; 1 bytes @ 0x0
   384                           
   385                           
   386                           ; 1 bytes @ 0x0
   387  002A                     	ds	1
   388  002B                     ___awdiv@sign:
   389  002B                     ___awmod@sign:	
   390                           ; 1 bytes @ 0x1
   391                           
   392                           
   393                           ; 1 bytes @ 0x1
   394  002B                     	ds	1
   395  002C                     ___awdiv@quotient:
   396                           
   397                           ; 2 bytes @ 0x2
   398  002C                     	ds	2
   399  002E                     ??_division:
   400                           
   401                           ; 1 bytes @ 0x4
   402  002E                     	ds	3
   403  0031                     ??_main:
   404                           
   405                           ; 1 bytes @ 0x7
   406  0031                     	ds	1
   407                           
   408                           	psect	maintext
   409  01C1                     __pmaintext:	
   410 ;;
   411 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   412 ;;
   413 ;; *************** function _main *****************
   414 ;; Defined at:
   415 ;;		line 82 in file "main7.c"
   416 ;; Parameters:    Size  Location     Type
   417 ;;		None
   418 ;; Auto vars:     Size  Location     Type
   419 ;;		None
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, status,2, status,0, pclath, cstack
   424 ;; Tracked objects:
   425 ;;		On entry : B00/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         0       0       0       0       0
   430 ;;      Locals:         0       0       0       0       0
   431 ;;      Temps:          0       1       0       0       0
   432 ;;      Totals:         0       1       0       0       0
   433 ;;Total ram usage:        1 bytes
   434 ;; Hardware stack levels required when called:    3
   435 ;; This function calls:
   436 ;;		_division
   437 ;;		_setup
   438 ;; This function is called by:
   439 ;;		Startup code after reset
   440 ;; This function uses a non-reentrant model
   441 ;;
   442                           
   443                           
   444                           ;psect for function _main
   445  01C1                     _main:
   446  01C1                     l1061:	
   447                           ;incstack = 0
   448                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   449                           
   450                           
   451                           ;main7.c: 83:     setup();
   452  01C1  120A  118A  2198  120A  118A  	fcall	_setup
   453  01C6                     l1063:
   454                           
   455                           ;main7.c: 85:     {;main7.c: 86:         cont= PORTA;
   456  01C6  1283               	bcf	3,5	;RP0=0, select bank0
   457  01C7  1303               	bcf	3,6	;RP1=0, select bank0
   458  01C8  0805               	movf	5,w	;volatile
   459  01C9  00B1               	movwf	??_main
   460  01CA  0831               	movf	??_main,w
   461  01CB  00B4               	movwf	_cont
   462  01CC                     l1065:
   463                           
   464                           ;main7.c: 87:         division();
   465  01CC  120A  118A  208E  120A  118A  	fcall	_division
   466  01D1  29C6               	goto	l1063
   467  01D2  120A  118A  280E   	ljmp	start
   468  01D5                     __end_of_main:
   469                           
   470                           	psect	text1
   471  0198                     __ptext1:	
   472 ;; *************** function _setup *****************
   473 ;; Defined at:
   474 ;;		line 93 in file "main7.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   488 ;;      Params:         0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0
   491 ;;      Totals:         0       0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    1
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function _setup
   504  0198                     _setup:
   505  0198                     l931:	
   506                           ;incstack = 0
   507                           ; Regs used in _setup: [wreg+status,2]
   508                           
   509                           
   510                           ;main7.c: 95:     ANSEL = 0x00;
   511  0198  1683               	bsf	3,5	;RP0=1, select bank3
   512  0199  1703               	bsf	3,6	;RP1=1, select bank3
   513  019A  0188               	clrf	8	;volatile
   514                           
   515                           ;main7.c: 96:     ANSELH = 0x00;
   516  019B  0189               	clrf	9	;volatile
   517  019C                     l933:
   518                           
   519                           ;main7.c: 98:     TRISBbits.TRISB0 = 1;
   520  019C  1683               	bsf	3,5	;RP0=1, select bank1
   521  019D  1303               	bcf	3,6	;RP1=0, select bank1
   522  019E  1406               	bsf	6,0	;volatile
   523  019F                     l935:
   524                           
   525                           ;main7.c: 99:     TRISBbits.TRISB1 = 1;
   526  019F  1486               	bsf	6,1	;volatile
   527                           
   528                           ;main7.c: 100:     TRISA = 0x00;
   529  01A0  0185               	clrf	5	;volatile
   530                           
   531                           ;main7.c: 101:     TRISC = 0x00;
   532  01A1  0187               	clrf	7	;volatile
   533                           
   534                           ;main7.c: 102:     TRISD = 0x00;
   535  01A2  0188               	clrf	8	;volatile
   536                           
   537                           ;main7.c: 103:     TRISE = 0x00;
   538  01A3  0189               	clrf	9	;volatile
   539                           
   540                           ;main7.c: 105:     PORTA = 0x00;
   541  01A4  1283               	bcf	3,5	;RP0=0, select bank0
   542  01A5  1303               	bcf	3,6	;RP1=0, select bank0
   543  01A6  0185               	clrf	5	;volatile
   544                           
   545                           ;main7.c: 106:     PORTB = 0x00;
   546  01A7  0186               	clrf	6	;volatile
   547                           
   548                           ;main7.c: 107:     PORTC = 0x00;
   549  01A8  0187               	clrf	7	;volatile
   550                           
   551                           ;main7.c: 108:     PORTD = 0x00;
   552  01A9  0188               	clrf	8	;volatile
   553                           
   554                           ;main7.c: 109:     PORTE = 0x00;
   555  01AA  0189               	clrf	9	;volatile
   556  01AB                     l937:
   557                           
   558                           ;main7.c: 111:     OSCCONbits.IRCF2 = 0;
   559  01AB  1683               	bsf	3,5	;RP0=1, select bank1
   560  01AC  1303               	bcf	3,6	;RP1=0, select bank1
   561  01AD  130F               	bcf	15,6	;volatile
   562  01AE                     l939:
   563                           
   564                           ;main7.c: 112:     OSCCONbits.IRCF1 = 1;
   565  01AE  168F               	bsf	15,5	;volatile
   566  01AF                     l941:
   567                           
   568                           ;main7.c: 113:     OSCCONbits.IRCF0 = 0;
   569  01AF  120F               	bcf	15,4	;volatile
   570  01B0                     l943:
   571                           
   572                           ;main7.c: 114:     OSCCONbits.SCS = 1;
   573  01B0  140F               	bsf	15,0	;volatile
   574  01B1                     l945:
   575                           
   576                           ;main7.c: 116:     OPTION_REGbits.T0CS = 0;
   577  01B1  1281               	bcf	1,5	;volatile
   578  01B2                     l947:
   579                           
   580                           ;main7.c: 117:     OPTION_REGbits.PSA = 0;
   581  01B2  1181               	bcf	1,3	;volatile
   582  01B3                     l949:
   583                           
   584                           ;main7.c: 118:     OPTION_REGbits.PS2 = 1;
   585  01B3  1501               	bsf	1,2	;volatile
   586  01B4                     l951:
   587                           
   588                           ;main7.c: 119:     OPTION_REGbits.PS1 = 1;
   589  01B4  1481               	bsf	1,1	;volatile
   590  01B5                     l953:
   591                           
   592                           ;main7.c: 120:     OPTION_REGbits.PS0 = 1;
   593  01B5  1401               	bsf	1,0	;volatile
   594  01B6                     l955:
   595                           
   596                           ;main7.c: 122:     INTCONbits.GIE = 1;
   597  01B6  178B               	bsf	11,7	;volatile
   598  01B7                     l957:
   599                           
   600                           ;main7.c: 123:     INTCONbits.RBIE = 1;
   601  01B7  158B               	bsf	11,3	;volatile
   602  01B8                     l959:
   603                           
   604                           ;main7.c: 124:     INTCONbits.RBIF = 0;
   605  01B8  100B               	bcf	11,0	;volatile
   606  01B9                     l961:
   607                           
   608                           ;main7.c: 125:     INTCONbits.T0IE = 1;
   609  01B9  168B               	bsf	11,5	;volatile
   610  01BA                     l963:
   611                           
   612                           ;main7.c: 126:     INTCONbits.T0IF = 0;
   613  01BA  110B               	bcf	11,2	;volatile
   614  01BB                     l965:
   615                           
   616                           ;main7.c: 128:     OPTION_REGbits.nRBPU = 0;
   617  01BB  1381               	bcf	1,7	;volatile
   618  01BC                     l967:
   619                           
   620                           ;main7.c: 129:     WPUB = 0b00000011;
   621  01BC  3003               	movlw	3
   622  01BD  0095               	movwf	21	;volatile
   623  01BE                     l969:
   624                           
   625                           ;main7.c: 130:     IOCBbits.IOCB0 = 1;
   626  01BE  1416               	bsf	22,0	;volatile
   627  01BF                     l971:
   628                           
   629                           ;main7.c: 131:     IOCBbits.IOCB1 = 1;
   630  01BF  1496               	bsf	22,1	;volatile
   631  01C0                     l82:
   632  01C0  0008               	return
   633  01C1                     __end_of_setup:
   634                           
   635                           	psect	text2
   636  008E                     __ptext2:	
   637 ;; *************** function _division *****************
   638 ;; Defined at:
   639 ;;		line 135 in file "main7.c"
   640 ;; Parameters:    Size  Location     Type
   641 ;;		None
   642 ;; Auto vars:     Size  Location     Type
   643 ;;		None
   644 ;; Return value:  Size  Location     Type
   645 ;;                  1    wreg      unsigned char 
   646 ;; Registers used:
   647 ;;		wreg, status,2, status,0, pclath, cstack
   648 ;; Tracked objects:
   649 ;;		On entry : 0/0
   650 ;;		On exit  : 0/0
   651 ;;		Unchanged: 0/0
   652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   653 ;;      Params:         0       0       0       0       0
   654 ;;      Locals:         0       0       0       0       0
   655 ;;      Temps:          0       3       0       0       0
   656 ;;      Totals:         0       3       0       0       0
   657 ;;Total ram usage:        3 bytes
   658 ;; Hardware stack levels used:    1
   659 ;; Hardware stack levels required when called:    2
   660 ;; This function calls:
   661 ;;		___awdiv
   662 ;;		___awmod
   663 ;; This function is called by:
   664 ;;		_main
   665 ;; This function uses a non-reentrant model
   666 ;;
   667                           
   668                           
   669                           ;psect for function _division
   670  008E                     _division:
   671  008E                     l1059:	
   672                           ;incstack = 0
   673                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   674                           
   675                           
   676                           ;main7.c: 136:     centena = cont/100;
   677  008E  3064               	movlw	100
   678  008F  00F3               	movwf	___awdiv@divisor
   679  0090  3000               	movlw	0
   680  0091  00F4               	movwf	___awdiv@divisor+1
   681  0092  1283               	bcf	3,5	;RP0=0, select bank0
   682  0093  1303               	bcf	3,6	;RP1=0, select bank0
   683  0094  0834               	movf	_cont,w
   684  0095  00AE               	movwf	??_division
   685  0096  01AF               	clrf	??_division+1
   686  0097  082E               	movf	??_division,w
   687  0098  00F5               	movwf	___awdiv@dividend
   688  0099  082F               	movf	??_division+1,w
   689  009A  00F6               	movwf	___awdiv@dividend+1
   690  009B  120A  118A  2025  120A  118A  	fcall	___awdiv
   691  00A0  0873               	movf	?___awdiv,w
   692  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   693  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   694  00A3  00B0               	movwf	??_division+2
   695  00A4  0830               	movf	??_division+2,w
   696  00A5  00B3               	movwf	_centena
   697                           
   698                           ;main7.c: 137:     unidad = cont%100;
   699  00A6  3064               	movlw	100
   700  00A7  00F3               	movwf	___awmod@divisor
   701  00A8  3000               	movlw	0
   702  00A9  00F4               	movwf	___awmod@divisor+1
   703  00AA  0834               	movf	_cont,w
   704  00AB  00AE               	movwf	??_division
   705  00AC  01AF               	clrf	??_division+1
   706  00AD  082E               	movf	??_division,w
   707  00AE  00F5               	movwf	___awmod@dividend
   708  00AF  082F               	movf	??_division+1,w
   709  00B0  00F6               	movwf	___awmod@dividend+1
   710  00B1  120A  118A  20E9  120A  118A  	fcall	___awmod
   711  00B6  0873               	movf	?___awmod,w
   712  00B7  1283               	bcf	3,5	;RP0=0, select bank0
   713  00B8  1303               	bcf	3,6	;RP1=0, select bank0
   714  00B9  00B0               	movwf	??_division+2
   715  00BA  0830               	movf	??_division+2,w
   716  00BB  00FA               	movwf	_unidad
   717                           
   718                           ;main7.c: 138:     decena = unidad/10;
   719  00BC  300A               	movlw	10
   720  00BD  00F3               	movwf	___awdiv@divisor
   721  00BE  3000               	movlw	0
   722  00BF  00F4               	movwf	___awdiv@divisor+1
   723  00C0  087A               	movf	_unidad,w
   724  00C1  00AE               	movwf	??_division
   725  00C2  01AF               	clrf	??_division+1
   726  00C3  082E               	movf	??_division,w
   727  00C4  00F5               	movwf	___awdiv@dividend
   728  00C5  082F               	movf	??_division+1,w
   729  00C6  00F6               	movwf	___awdiv@dividend+1
   730  00C7  120A  118A  2025  120A  118A  	fcall	___awdiv
   731  00CC  0873               	movf	?___awdiv,w
   732  00CD  1283               	bcf	3,5	;RP0=0, select bank0
   733  00CE  1303               	bcf	3,6	;RP1=0, select bank0
   734  00CF  00B0               	movwf	??_division+2
   735  00D0  0830               	movf	??_division+2,w
   736  00D1  00B2               	movwf	_decena
   737                           
   738                           ;main7.c: 139:     unidad = unidad%10;
   739  00D2  300A               	movlw	10
   740  00D3  00F3               	movwf	___awmod@divisor
   741  00D4  3000               	movlw	0
   742  00D5  00F4               	movwf	___awmod@divisor+1
   743  00D6  087A               	movf	_unidad,w
   744  00D7  00AE               	movwf	??_division
   745  00D8  01AF               	clrf	??_division+1
   746  00D9  082E               	movf	??_division,w
   747  00DA  00F5               	movwf	___awmod@dividend
   748  00DB  082F               	movf	??_division+1,w
   749  00DC  00F6               	movwf	___awmod@dividend+1
   750  00DD  120A  118A  20E9  120A  118A  	fcall	___awmod
   751  00E2  0873               	movf	?___awmod,w
   752  00E3  1283               	bcf	3,5	;RP0=0, select bank0
   753  00E4  1303               	bcf	3,6	;RP1=0, select bank0
   754  00E5  00B0               	movwf	??_division+2
   755  00E6  0830               	movf	??_division+2,w
   756  00E7  00FA               	movwf	_unidad
   757  00E8                     l85:
   758  00E8  0008               	return
   759  00E9                     __end_of_division:
   760                           
   761                           	psect	text3
   762  00E9                     __ptext3:	
   763 ;; *************** function ___awmod *****************
   764 ;; Defined at:
   765 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   766 ;; Parameters:    Size  Location     Type
   767 ;;  divisor         2    3[COMMON] int 
   768 ;;  dividend        2    5[COMMON] int 
   769 ;; Auto vars:     Size  Location     Type
   770 ;;  sign            1    1[BANK0 ] unsigned char 
   771 ;;  counter         1    0[BANK0 ] unsigned char 
   772 ;; Return value:  Size  Location     Type
   773 ;;                  2    3[COMMON] int 
   774 ;; Registers used:
   775 ;;		wreg, status,2, status,0
   776 ;; Tracked objects:
   777 ;;		On entry : 0/0
   778 ;;		On exit  : 0/0
   779 ;;		Unchanged: 0/0
   780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   781 ;;      Params:         4       0       0       0       0
   782 ;;      Locals:         0       2       0       0       0
   783 ;;      Temps:          1       0       0       0       0
   784 ;;      Totals:         5       2       0       0       0
   785 ;;Total ram usage:        7 bytes
   786 ;; Hardware stack levels used:    1
   787 ;; Hardware stack levels required when called:    1
   788 ;; This function calls:
   789 ;;		Nothing
   790 ;; This function is called by:
   791 ;;		_division
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795                           
   796                           ;psect for function ___awmod
   797  00E9                     ___awmod:
   798  00E9                     l1021:	
   799                           ;incstack = 0
   800                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   801                           
   802  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   803  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   804  00EB  01AB               	clrf	___awmod@sign
   805  00EC                     l1023:
   806  00EC  1FF6               	btfss	___awmod@dividend+1,7
   807  00ED  28EF               	goto	u511
   808  00EE  28F0               	goto	u510
   809  00EF                     u511:
   810  00EF  28F7               	goto	l1029
   811  00F0                     u510:
   812  00F0                     l1025:
   813  00F0  09F5               	comf	___awmod@dividend,f
   814  00F1  09F6               	comf	___awmod@dividend+1,f
   815  00F2  0AF5               	incf	___awmod@dividend,f
   816  00F3  1903               	skipnz
   817  00F4  0AF6               	incf	___awmod@dividend+1,f
   818  00F5                     l1027:
   819  00F5  01AB               	clrf	___awmod@sign
   820  00F6  0AAB               	incf	___awmod@sign,f
   821  00F7                     l1029:
   822  00F7  1FF4               	btfss	___awmod@divisor+1,7
   823  00F8  28FA               	goto	u521
   824  00F9  28FB               	goto	u520
   825  00FA                     u521:
   826  00FA  2900               	goto	l1033
   827  00FB                     u520:
   828  00FB                     l1031:
   829  00FB  09F3               	comf	___awmod@divisor,f
   830  00FC  09F4               	comf	___awmod@divisor+1,f
   831  00FD  0AF3               	incf	___awmod@divisor,f
   832  00FE  1903               	skipnz
   833  00FF  0AF4               	incf	___awmod@divisor+1,f
   834  0100                     l1033:
   835  0100  0873               	movf	___awmod@divisor,w
   836  0101  0474               	iorwf	___awmod@divisor+1,w
   837  0102  1903               	btfsc	3,2
   838  0103  2905               	goto	u531
   839  0104  2906               	goto	u530
   840  0105                     u531:
   841  0105  2935               	goto	l1051
   842  0106                     u530:
   843  0106                     l1035:
   844  0106  01AA               	clrf	___awmod@counter
   845  0107  0AAA               	incf	___awmod@counter,f
   846  0108  2914               	goto	l1041
   847  0109                     l1037:
   848  0109  3001               	movlw	1
   849  010A                     u545:
   850  010A  1003               	clrc
   851  010B  0DF3               	rlf	___awmod@divisor,f
   852  010C  0DF4               	rlf	___awmod@divisor+1,f
   853  010D  3EFF               	addlw	-1
   854  010E  1D03               	skipz
   855  010F  290A               	goto	u545
   856  0110                     l1039:
   857  0110  3001               	movlw	1
   858  0111  00F7               	movwf	??___awmod
   859  0112  0877               	movf	??___awmod,w
   860  0113  07AA               	addwf	___awmod@counter,f
   861  0114                     l1041:
   862  0114  1FF4               	btfss	___awmod@divisor+1,7
   863  0115  2917               	goto	u551
   864  0116  2918               	goto	u550
   865  0117                     u551:
   866  0117  2909               	goto	l1037
   867  0118                     u550:
   868  0118                     l1043:
   869  0118  0874               	movf	___awmod@divisor+1,w
   870  0119  0276               	subwf	___awmod@dividend+1,w
   871  011A  1D03               	skipz
   872  011B  291E               	goto	u565
   873  011C  0873               	movf	___awmod@divisor,w
   874  011D  0275               	subwf	___awmod@dividend,w
   875  011E                     u565:
   876  011E  1C03               	skipc
   877  011F  2921               	goto	u561
   878  0120  2922               	goto	u560
   879  0121                     u561:
   880  0121  2928               	goto	l1047
   881  0122                     u560:
   882  0122                     l1045:
   883  0122  0873               	movf	___awmod@divisor,w
   884  0123  02F5               	subwf	___awmod@dividend,f
   885  0124  0874               	movf	___awmod@divisor+1,w
   886  0125  1C03               	skipc
   887  0126  03F6               	decf	___awmod@dividend+1,f
   888  0127  02F6               	subwf	___awmod@dividend+1,f
   889  0128                     l1047:
   890  0128  3001               	movlw	1
   891  0129                     u575:
   892  0129  1003               	clrc
   893  012A  0CF4               	rrf	___awmod@divisor+1,f
   894  012B  0CF3               	rrf	___awmod@divisor,f
   895  012C  3EFF               	addlw	-1
   896  012D  1D03               	skipz
   897  012E  2929               	goto	u575
   898  012F                     l1049:
   899  012F  3001               	movlw	1
   900  0130  02AA               	subwf	___awmod@counter,f
   901  0131  1D03               	btfss	3,2
   902  0132  2934               	goto	u581
   903  0133  2935               	goto	u580
   904  0134                     u581:
   905  0134  2918               	goto	l1043
   906  0135                     u580:
   907  0135                     l1051:
   908  0135  082B               	movf	___awmod@sign,w
   909  0136  1903               	btfsc	3,2
   910  0137  2939               	goto	u591
   911  0138  293A               	goto	u590
   912  0139                     u591:
   913  0139  293F               	goto	l1055
   914  013A                     u590:
   915  013A                     l1053:
   916  013A  09F5               	comf	___awmod@dividend,f
   917  013B  09F6               	comf	___awmod@dividend+1,f
   918  013C  0AF5               	incf	___awmod@dividend,f
   919  013D  1903               	skipnz
   920  013E  0AF6               	incf	___awmod@dividend+1,f
   921  013F                     l1055:
   922  013F  0876               	movf	___awmod@dividend+1,w
   923  0140  00F4               	movwf	?___awmod+1
   924  0141  0875               	movf	___awmod@dividend,w
   925  0142  00F3               	movwf	?___awmod
   926  0143                     l337:
   927  0143  0008               	return
   928  0144                     __end_of___awmod:
   929                           
   930                           	psect	text4
   931  0025                     __ptext4:	
   932 ;; *************** function ___awdiv *****************
   933 ;; Defined at:
   934 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;  divisor         2    3[COMMON] int 
   937 ;;  dividend        2    5[COMMON] int 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  quotient        2    2[BANK0 ] int 
   940 ;;  sign            1    1[BANK0 ] unsigned char 
   941 ;;  counter         1    0[BANK0 ] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2    3[COMMON] int 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   951 ;;      Params:         4       0       0       0       0
   952 ;;      Locals:         0       4       0       0       0
   953 ;;      Temps:          1       0       0       0       0
   954 ;;      Totals:         5       4       0       0       0
   955 ;;Total ram usage:        9 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; Hardware stack levels required when called:    1
   958 ;; This function calls:
   959 ;;		Nothing
   960 ;; This function is called by:
   961 ;;		_division
   962 ;; This function uses a non-reentrant model
   963 ;;
   964                           
   965                           
   966                           ;psect for function ___awdiv
   967  0025                     ___awdiv:
   968  0025                     l849:	
   969                           ;incstack = 0
   970                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   971                           
   972  0025  1283               	bcf	3,5	;RP0=0, select bank0
   973  0026  1303               	bcf	3,6	;RP1=0, select bank0
   974  0027  01AB               	clrf	___awdiv@sign
   975  0028                     l851:
   976  0028  1FF4               	btfss	___awdiv@divisor+1,7
   977  0029  282B               	goto	u261
   978  002A  282C               	goto	u260
   979  002B                     u261:
   980  002B  2833               	goto	l857
   981  002C                     u260:
   982  002C                     l853:
   983  002C  09F3               	comf	___awdiv@divisor,f
   984  002D  09F4               	comf	___awdiv@divisor+1,f
   985  002E  0AF3               	incf	___awdiv@divisor,f
   986  002F  1903               	skipnz
   987  0030  0AF4               	incf	___awdiv@divisor+1,f
   988  0031                     l855:
   989  0031  01AB               	clrf	___awdiv@sign
   990  0032  0AAB               	incf	___awdiv@sign,f
   991  0033                     l857:
   992  0033  1FF6               	btfss	___awdiv@dividend+1,7
   993  0034  2836               	goto	u271
   994  0035  2837               	goto	u270
   995  0036                     u271:
   996  0036  2840               	goto	l863
   997  0037                     u270:
   998  0037                     l859:
   999  0037  09F5               	comf	___awdiv@dividend,f
  1000  0038  09F6               	comf	___awdiv@dividend+1,f
  1001  0039  0AF5               	incf	___awdiv@dividend,f
  1002  003A  1903               	skipnz
  1003  003B  0AF6               	incf	___awdiv@dividend+1,f
  1004  003C                     l861:
  1005  003C  3001               	movlw	1
  1006  003D  00F7               	movwf	??___awdiv
  1007  003E  0877               	movf	??___awdiv,w
  1008  003F  06AB               	xorwf	___awdiv@sign,f
  1009  0040                     l863:
  1010  0040  01AC               	clrf	___awdiv@quotient
  1011  0041  01AD               	clrf	___awdiv@quotient+1
  1012  0042                     l865:
  1013  0042  0873               	movf	___awdiv@divisor,w
  1014  0043  0474               	iorwf	___awdiv@divisor+1,w
  1015  0044  1903               	btfsc	3,2
  1016  0045  2847               	goto	u281
  1017  0046  2848               	goto	u280
  1018  0047                     u281:
  1019  0047  287F               	goto	l885
  1020  0048                     u280:
  1021  0048                     l867:
  1022  0048  01AA               	clrf	___awdiv@counter
  1023  0049  0AAA               	incf	___awdiv@counter,f
  1024  004A  2856               	goto	l873
  1025  004B                     l869:
  1026  004B  3001               	movlw	1
  1027  004C                     u295:
  1028  004C  1003               	clrc
  1029  004D  0DF3               	rlf	___awdiv@divisor,f
  1030  004E  0DF4               	rlf	___awdiv@divisor+1,f
  1031  004F  3EFF               	addlw	-1
  1032  0050  1D03               	skipz
  1033  0051  284C               	goto	u295
  1034  0052                     l871:
  1035  0052  3001               	movlw	1
  1036  0053  00F7               	movwf	??___awdiv
  1037  0054  0877               	movf	??___awdiv,w
  1038  0055  07AA               	addwf	___awdiv@counter,f
  1039  0056                     l873:
  1040  0056  1FF4               	btfss	___awdiv@divisor+1,7
  1041  0057  2859               	goto	u301
  1042  0058  285A               	goto	u300
  1043  0059                     u301:
  1044  0059  284B               	goto	l869
  1045  005A                     u300:
  1046  005A                     l875:
  1047  005A  3001               	movlw	1
  1048  005B                     u315:
  1049  005B  1003               	clrc
  1050  005C  0DAC               	rlf	___awdiv@quotient,f
  1051  005D  0DAD               	rlf	___awdiv@quotient+1,f
  1052  005E  3EFF               	addlw	-1
  1053  005F  1D03               	skipz
  1054  0060  285B               	goto	u315
  1055  0061  0874               	movf	___awdiv@divisor+1,w
  1056  0062  0276               	subwf	___awdiv@dividend+1,w
  1057  0063  1D03               	skipz
  1058  0064  2867               	goto	u325
  1059  0065  0873               	movf	___awdiv@divisor,w
  1060  0066  0275               	subwf	___awdiv@dividend,w
  1061  0067                     u325:
  1062  0067  1C03               	skipc
  1063  0068  286A               	goto	u321
  1064  0069  286B               	goto	u320
  1065  006A                     u321:
  1066  006A  2872               	goto	l881
  1067  006B                     u320:
  1068  006B                     l877:
  1069  006B  0873               	movf	___awdiv@divisor,w
  1070  006C  02F5               	subwf	___awdiv@dividend,f
  1071  006D  0874               	movf	___awdiv@divisor+1,w
  1072  006E  1C03               	skipc
  1073  006F  03F6               	decf	___awdiv@dividend+1,f
  1074  0070  02F6               	subwf	___awdiv@dividend+1,f
  1075  0071                     l879:
  1076  0071  142C               	bsf	___awdiv@quotient,0
  1077  0072                     l881:
  1078  0072  3001               	movlw	1
  1079  0073                     u335:
  1080  0073  1003               	clrc
  1081  0074  0CF4               	rrf	___awdiv@divisor+1,f
  1082  0075  0CF3               	rrf	___awdiv@divisor,f
  1083  0076  3EFF               	addlw	-1
  1084  0077  1D03               	skipz
  1085  0078  2873               	goto	u335
  1086  0079                     l883:
  1087  0079  3001               	movlw	1
  1088  007A  02AA               	subwf	___awdiv@counter,f
  1089  007B  1D03               	btfss	3,2
  1090  007C  287E               	goto	u341
  1091  007D  287F               	goto	u340
  1092  007E                     u341:
  1093  007E  285A               	goto	l875
  1094  007F                     u340:
  1095  007F                     l885:
  1096  007F  082B               	movf	___awdiv@sign,w
  1097  0080  1903               	btfsc	3,2
  1098  0081  2883               	goto	u351
  1099  0082  2884               	goto	u350
  1100  0083                     u351:
  1101  0083  2889               	goto	l889
  1102  0084                     u350:
  1103  0084                     l887:
  1104  0084  09AC               	comf	___awdiv@quotient,f
  1105  0085  09AD               	comf	___awdiv@quotient+1,f
  1106  0086  0AAC               	incf	___awdiv@quotient,f
  1107  0087  1903               	skipnz
  1108  0088  0AAD               	incf	___awdiv@quotient+1,f
  1109  0089                     l889:
  1110  0089  082D               	movf	___awdiv@quotient+1,w
  1111  008A  00F4               	movwf	?___awdiv+1
  1112  008B  082C               	movf	___awdiv@quotient,w
  1113  008C  00F3               	movwf	?___awdiv
  1114  008D                     l324:
  1115  008D  0008               	return
  1116  008E                     __end_of___awdiv:
  1117                           
  1118                           	psect	text5
  1119  0144                     __ptext5:	
  1120 ;; *************** function _isr *****************
  1121 ;; Defined at:
  1122 ;;		line 43 in file "main7.c"
  1123 ;; Parameters:    Size  Location     Type
  1124 ;;		None
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;		None
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       0       0       0       0
  1137 ;;      Locals:         0       0       0       0       0
  1138 ;;      Temps:          3       0       0       0       0
  1139 ;;      Totals:         3       0       0       0       0
  1140 ;;Total ram usage:        3 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; This function calls:
  1143 ;;		Nothing
  1144 ;; This function is called by:
  1145 ;;		Interrupt level 1
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           
  1150                           ;psect for function _isr
  1151  0144                     _isr:
  1152  0144                     i1l975:
  1153                           
  1154                           ;main7.c: 44:         if (T0IF == 1)
  1155  0144  1D0B               	btfss	11,2	;volatile
  1156  0145  2947               	goto	u45_21
  1157  0146  2948               	goto	u45_20
  1158  0147                     u45_21:
  1159  0147  297A               	goto	i1l1003
  1160  0148                     u45_20:
  1161  0148                     i1l977:
  1162                           
  1163                           ;main7.c: 45:     {;main7.c: 46:         PORTEbits.RE2 = 0;
  1164  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1166  014A  1109               	bcf	9,2	;volatile
  1167                           
  1168                           ;main7.c: 47:         PORTEbits.RE0 = 1;
  1169  014B  1409               	bsf	9,0	;volatile
  1170  014C                     i1l979:
  1171                           
  1172                           ;main7.c: 48:         PORTD = (display[centena]);
  1173  014C  0833               	movf	_centena,w
  1174  014D  3E20               	addlw	(low (_display| 0))& (0+255)
  1175  014E  0084               	movwf	4
  1176  014F  1383               	bcf	3,7	;select IRP bank0
  1177  0150  0800               	movf	0,w
  1178  0151  0088               	movwf	8	;volatile
  1179  0152                     i1l981:
  1180                           
  1181                           ;main7.c: 49:         multi = 0b00000001;
  1182  0152  3001               	movlw	1
  1183  0153  00F8               	movwf	_multi
  1184  0154  3000               	movlw	0
  1185  0155  00F9               	movwf	_multi+1
  1186  0156                     i1l983:
  1187                           
  1188                           ;main7.c: 51:         if (multi == 0b00000001)
  1189  0156  0378               	decf	_multi,w
  1190  0157  0479               	iorwf	_multi+1,w
  1191  0158  1D03               	btfss	3,2
  1192  0159  295B               	goto	u46_21
  1193  015A  295C               	goto	u46_20
  1194  015B                     u46_21:
  1195  015B  2967               	goto	i1l991
  1196  015C                     u46_20:
  1197  015C                     i1l985:
  1198                           
  1199                           ;main7.c: 52:         {;main7.c: 53:             PORTEbits.RE0 = 0;
  1200  015C  1009               	bcf	9,0	;volatile
  1201                           
  1202                           ;main7.c: 54:             PORTEbits.RE1 = 1;
  1203  015D  1489               	bsf	9,1	;volatile
  1204  015E                     i1l987:
  1205                           
  1206                           ;main7.c: 55:             PORTD = (display[decena]);
  1207  015E  0832               	movf	_decena,w
  1208  015F  3E20               	addlw	(low (_display| 0))& (0+255)
  1209  0160  0084               	movwf	4
  1210  0161  0800               	movf	0,w
  1211  0162  0088               	movwf	8	;volatile
  1212  0163                     i1l989:
  1213                           
  1214                           ;main7.c: 56:             multi = 0b00000010;
  1215  0163  3002               	movlw	2
  1216  0164  00F8               	movwf	_multi
  1217  0165  3000               	movlw	0
  1218  0166  00F9               	movwf	_multi+1
  1219  0167                     i1l991:
  1220                           
  1221                           ;main7.c: 58:         if (multi == 0b00000010)
  1222  0167  3002               	movlw	2
  1223  0168  0678               	xorwf	_multi,w
  1224  0169  0479               	iorwf	_multi+1,w
  1225  016A  1D03               	btfss	3,2
  1226  016B  296D               	goto	u47_21
  1227  016C  296E               	goto	u47_20
  1228  016D                     u47_21:
  1229  016D  2977               	goto	i1l999
  1230  016E                     u47_20:
  1231  016E                     i1l993:
  1232                           
  1233                           ;main7.c: 59:         {;main7.c: 60:             PORTEbits.RE1 = 0;
  1234  016E  1089               	bcf	9,1	;volatile
  1235                           
  1236                           ;main7.c: 61:             PORTEbits.RE2 = 1;
  1237  016F  1509               	bsf	9,2	;volatile
  1238  0170                     i1l995:
  1239                           
  1240                           ;main7.c: 62:             PORTD = (display[unidad]);
  1241  0170  087A               	movf	_unidad,w
  1242  0171  3E20               	addlw	(low (_display| 0))& (0+255)
  1243  0172  0084               	movwf	4
  1244  0173  0800               	movf	0,w
  1245  0174  0088               	movwf	8	;volatile
  1246  0175                     i1l997:
  1247                           
  1248                           ;main7.c: 63:             multi = 0x00;
  1249  0175  01F8               	clrf	_multi
  1250  0176  01F9               	clrf	_multi+1
  1251  0177                     i1l999:
  1252                           
  1253                           ;main7.c: 65:         INTCONbits.T0IF = 0;
  1254  0177  110B               	bcf	11,2	;volatile
  1255  0178                     i1l1001:
  1256                           
  1257                           ;main7.c: 66:         TMR0 = 255;
  1258  0178  30FF               	movlw	255
  1259  0179  0081               	movwf	1	;volatile
  1260  017A                     i1l1003:
  1261                           
  1262                           ;main7.c: 68:     if (RBIF == 1)
  1263  017A  1C0B               	btfss	11,0	;volatile
  1264  017B  297D               	goto	u48_21
  1265  017C  297E               	goto	u48_20
  1266  017D                     u48_21:
  1267  017D  298F               	goto	i1l71
  1268  017E                     u48_20:
  1269  017E                     i1l1005:
  1270                           
  1271                           ;main7.c: 69:     {;main7.c: 70:         if (PORTBbits.RB0 == 0)
  1272  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1273  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1274  0180  1806               	btfsc	6,0	;volatile
  1275  0181  2983               	goto	u49_21
  1276  0182  2984               	goto	u49_20
  1277  0183                     u49_21:
  1278  0183  2987               	goto	i1l1009
  1279  0184                     u49_20:
  1280  0184                     i1l1007:
  1281                           
  1282                           ;main7.c: 71:         {;main7.c: 72:             PORTA = PORTA + 1;
  1283  0184  0805               	movf	5,w	;volatile
  1284  0185  3E01               	addlw	1
  1285  0186  0085               	movwf	5	;volatile
  1286  0187                     i1l1009:
  1287                           
  1288                           ;main7.c: 74:         if (PORTBbits.RB1 == 0)
  1289  0187  1886               	btfsc	6,1	;volatile
  1290  0188  298A               	goto	u50_21
  1291  0189  298B               	goto	u50_20
  1292  018A                     u50_21:
  1293  018A  298E               	goto	i1l1013
  1294  018B                     u50_20:
  1295  018B                     i1l1011:
  1296                           
  1297                           ;main7.c: 75:         {;main7.c: 76:             PORTA = PORTA - 1;
  1298  018B  0805               	movf	5,w	;volatile
  1299  018C  3EFF               	addlw	255
  1300  018D  0085               	movwf	5	;volatile
  1301  018E                     i1l1013:
  1302                           
  1303                           ;main7.c: 78:         INTCONbits.RBIF = 0;
  1304  018E  100B               	bcf	11,0	;volatile
  1305  018F                     i1l71:
  1306  018F  0872               	movf	??_isr+2,w
  1307  0190  008A               	movwf	10
  1308  0191  0871               	movf	??_isr+1,w
  1309  0192  0084               	movwf	4
  1310  0193  0E70               	swapf	??_isr,w
  1311  0194  0083               	movwf	3
  1312  0195  0EFE               	swapf	btemp,f
  1313  0196  0E7E               	swapf	btemp,w
  1314  0197  0009               	retfie
  1315  0198                     __end_of_isr:
  1316  007E                     btemp	set	126	;btemp
  1317  007E                     wtemp0	set	126
  1318                           
  1319                           	psect	intentry
  1320  0004                     __pintentry:	
  1321                           ;incstack = 0
  1322                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1323                           
  1324  0004                     interrupt_function:
  1325  007E                     saved_w	set	btemp
  1326  0004  00FE               	movwf	btemp
  1327  0005  0E03               	swapf	3,w
  1328  0006  00F0               	movwf	??_isr
  1329  0007  0804               	movf	4,w
  1330  0008  00F1               	movwf	??_isr+1
  1331  0009  080A               	movf	10,w
  1332  000A  00F2               	movwf	??_isr+2
  1333  000B  120A  118A  2944   	ljmp	_isr
  1334                           
  1335                           	psect	config
  1336                           
  1337                           ;Config register CONFIG1 @ 0x2007
  1338                           ;	Oscillator Selection bits
  1339                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1340                           ;	Watchdog Timer Enable bit
  1341                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1342                           ;	Power-up Timer Enable bit
  1343                           ;	PWRTE = OFF, PWRT disabled
  1344                           ;	RE3/MCLR pin function select bit
  1345                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1346                           ;	Code Protection bit
  1347                           ;	CP = OFF, Program memory code protection is disabled
  1348                           ;	Data Code Protection bit
  1349                           ;	CPD = OFF, Data memory code protection is disabled
  1350                           ;	Brown Out Reset Selection bits
  1351                           ;	BOREN = OFF, BOR disabled
  1352                           ;	Internal External Switchover bit
  1353                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1354                           ;	Fail-Safe Clock Monitor Enabled bit
  1355                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1356                           ;	Low Voltage Programming Enable bit
  1357                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1358                           ;	In-Circuit Debugger Mode bit
  1359                           ;	DEBUG = 0x1, unprogrammed default
  1360  2007                     	org	8199
  1361  2007  20D4               	dw	8404
  1362                           
  1363                           ;Config register CONFIG2 @ 0x2008
  1364                           ;	Brown-out Reset Selection bit
  1365                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1366                           ;	Flash Program Memory Self Write Enable bits
  1367                           ;	WRT = OFF, Write protection off
  1368  2008                     	org	8200
  1369  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      8      21
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1397
                                              7 BANK0      1     1      0
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1397
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     604
                                              3 COMMON     5     1      4
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      8      15       5       26.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      20      12        0.0%
ABS                  0      0      20       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 18 17:30:52 2021

                      pc 0002                       l82 01C0                       l85 00E8  
           ___awdiv@sign 002B                       fsr 0004                      l324 008D  
                    l337 0143                      l851 0028                      l931 0198  
                    l861 003C                      l853 002C                      l941 01AF  
                    l933 019C                      l871 0052                      l863 0040  
                    l855 0031                      l951 01B4                      l943 01B0  
                    l935 019F                      l881 0072                      l873 0056  
                    l865 0042                      l857 0033                      l849 0025  
                    l961 01B9                      l953 01B5                      l945 01B1  
                    l937 01AB                      l883 0079                      l875 005A  
                    l867 0048                      l859 0037                      l971 01BF  
                    l963 01BA                      l955 01B6                      l947 01B2  
                    l939 01AE                      l877 006B                      l869 004B  
                    l885 007F                      l965 01BB                      l957 01B7  
                    l949 01B3                      l887 0084                      l879 0071  
                    l967 01BC                      l959 01B8                      l889 0089  
                    l969 01BE                      u300 005A                      u301 0059  
                    u320 006B                      u321 006A                      u315 005B  
                    u340 007F                      u260 002C                      u341 007E  
                    u325 0067                      u261 002B                      u350 0084  
                    u270 0037                      u510 00F0                      u351 0083  
                    u335 0073                      u271 0036                      u511 00EF  
                    u280 0048                      u520 00FB                      u281 0047  
                    u521 00FA                      u530 0106                      u531 0105  
                    u550 0118                      u295 004C                      u551 0117  
                    u560 0122                      u561 0121                      u545 010A  
                    u580 0135                      u581 0134                      u565 011E  
                    u590 013A                      u591 0139                      u575 0129  
                    _isr 0144                      fsr0 0004                      indf 0000  
           ___awmod@sign 002B                     l1021 00E9                     l1031 00FB  
                   l1023 00EC                     l1041 0114                     l1033 0100  
                   l1025 00F0                     l1043 0118                     l1035 0106  
                   l1051 0135                     l1027 00F5                     l1053 013A  
                   l1045 0122                     l1037 0109                     l1029 00F7  
                   l1061 01C1                     l1055 013F                     l1047 0128  
                   l1039 0110                     l1063 01C6                     l1049 012F  
                   l1065 01CC                     l1059 008E                     ?_isr 0070  
                   _T0IF 005A                     _RBIF 0058                     i1l71 018F  
                   _TMR0 0001                     _WPUB 0095                     _cont 0034  
                   _main 01C1                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 008E  
        __end_of___awmod 0144                    _ANSEL 0188          ___awdiv@divisor 0073  
                  i1l981 0152                    i1l991 0167                    i1l983 0156  
                  i1l975 0144                    i1l993 016E                    i1l985 015C  
                  i1l977 0148                    i1l995 0170                    i1l987 015E  
                  i1l979 014C                    i1l997 0175                    i1l989 0163  
                  i1l999 0177          ___awdiv@counter 002A                    u50_20 018B  
                  u50_21 018A                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  u45_20 0148                    u45_21 0147                    u46_20 015C  
                  u46_21 015B                    u47_20 016E                    u47_21 016D  
                  u48_20 017E                    u48_21 017D                    u49_20 0184  
                  u49_21 0183                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _multi 0078  
                  _setup 0198                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01D5  
                 ??_main 0031         ___awdiv@dividend 0075                   ?_setup 0070  
                 _ANSELH 0189                   i1l1001 0178                   i1l1011 018B  
                 i1l1003 017A                   i1l1013 018E                   i1l1005 017E  
                 i1l1007 0184                   i1l1009 0187         __end_of_division 00E9  
              ??___awdiv 0077                   _decena 0032                ??___awmod 0077  
       ___awdiv@quotient 002C          ___awmod@divisor 0073          ___awmod@counter 002A  
                 _unidad 007A                   saved_w 007E  __end_of__initialization 0021  
         __pcstackCOMMON 0070             __pidataBANK0 01E8            __end_of_setup 01C1  
         _OPTION_REGbits 0081                  ??_setup 0073               __pnvCOMMON 007A  
             __pmaintext 01C1               __pintentry 0004                ?_division 0070  
                ___awdiv 0025                  ___awmod 00E9                  _centena 0033  
                __ptext1 0198                  __ptext2 008E                  __ptext3 00E9  
                __ptext4 0025                  __ptext5 0144                  _display 0020  
           __size_of_isr 0054         ___awmod@dividend 0075     end_of_initialization 0021  
             ??_division 002E                _PORTBbits 0006                _PORTEbits 0009  
              _TRISBbits 0086      start_initialization 0011              __end_of_isr 0198  
             init_fetch0 01D5              __pdataBANK0 0020              __pbssCOMMON 0078  
              ___latbits 0002            __pcstackBANK0 002A        __size_of_division 005B  
              __pnvBANK0 0032                 ?___awdiv 0073                 ?___awmod 0073  
         __size_of_setup 0029        interrupt_function 0004                 _IOCBbits 0096  
       __size_of___awdiv 0069         __size_of___awmod 005B                 _division 008E  
          __size_of_main 0014               _INTCONbits 000B                 init_ram0 01D9  
               intlevel1 0000               _OSCCONbits 008F  
