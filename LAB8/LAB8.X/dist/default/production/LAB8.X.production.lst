

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun Apr 25 15:17:35 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 2.20
    23                           ; Generated 12/02/2020 GMT
    24                           ; 
    25                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F887 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134  0000                     	;# 
   135  0001                     	;# 
   136  0002                     	;# 
   137  0003                     	;# 
   138  0004                     	;# 
   139  0005                     	;# 
   140  0006                     	;# 
   141  0007                     	;# 
   142  0008                     	;# 
   143  0009                     	;# 
   144  000A                     	;# 
   145  000B                     	;# 
   146  000C                     	;# 
   147  000D                     	;# 
   148  000E                     	;# 
   149  000E                     	;# 
   150  000F                     	;# 
   151  0010                     	;# 
   152  0011                     	;# 
   153  0012                     	;# 
   154  0013                     	;# 
   155  0014                     	;# 
   156  0015                     	;# 
   157  0015                     	;# 
   158  0016                     	;# 
   159  0017                     	;# 
   160  0018                     	;# 
   161  0019                     	;# 
   162  001A                     	;# 
   163  001B                     	;# 
   164  001B                     	;# 
   165  001C                     	;# 
   166  001D                     	;# 
   167  001E                     	;# 
   168  001F                     	;# 
   169  0081                     	;# 
   170  0085                     	;# 
   171  0086                     	;# 
   172  0087                     	;# 
   173  0088                     	;# 
   174  0089                     	;# 
   175  008C                     	;# 
   176  008D                     	;# 
   177  008E                     	;# 
   178  008F                     	;# 
   179  0090                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0094                     	;# 
   186  0095                     	;# 
   187  0096                     	;# 
   188  0097                     	;# 
   189  0098                     	;# 
   190  0099                     	;# 
   191  009A                     	;# 
   192  009B                     	;# 
   193  009C                     	;# 
   194  009D                     	;# 
   195  009E                     	;# 
   196  009F                     	;# 
   197  0105                     	;# 
   198  0107                     	;# 
   199  0108                     	;# 
   200  0109                     	;# 
   201  010C                     	;# 
   202  010C                     	;# 
   203  010D                     	;# 
   204  010E                     	;# 
   205  010F                     	;# 
   206  0185                     	;# 
   207  0187                     	;# 
   208  0188                     	;# 
   209  0189                     	;# 
   210  018C                     	;# 
   211  018D                     	;# 
   212                           
   213                           	psect	idataBANK0
   214  0212                     __pidataBANK0:
   215                           
   216                           ;initializer for _display
   217  0212  343F               	retlw	63
   218  0213  3406               	retlw	6
   219  0214  345B               	retlw	91
   220  0215  344F               	retlw	79
   221  0216  3466               	retlw	102
   222  0217  346D               	retlw	109
   223  0218  347D               	retlw	125
   224  0219  3407               	retlw	7
   225  021A  347F               	retlw	127
   226  021B  346F               	retlw	111
   227  0009                     _PORTE	set	9
   228  0006                     _PORTB	set	6
   229  0005                     _PORTA	set	5
   230  001E                     _ADRESH	set	30
   231  0007                     _PORTC	set	7
   232  001F                     _ADCON0bits	set	31
   233  000C                     _PIR1bits	set	12
   234  0001                     _TMR0	set	1
   235  000B                     _INTCONbits	set	11
   236  0008                     _PORTD	set	8
   237  0009                     _PORTEbits	set	9
   238  005A                     _T0IF	set	90
   239  009F                     _ADCON1bits	set	159
   240  008C                     _PIE1bits	set	140
   241  0081                     _OPTION_REGbits	set	129
   242  008F                     _OSCCONbits	set	143
   243  0089                     _TRISE	set	137
   244  0088                     _TRISD	set	136
   245  0087                     _TRISC	set	135
   246  0085                     _TRISA	set	133
   247  0189                     _ANSELH	set	393
   248  0188                     _ANSEL	set	392
   249                           
   250                           	psect	cinit
   251  0011                     start_initialization:	
   252                           ; #config settings
   253                           
   254  0011                     __initialization:
   255                           
   256                           ; Initialize objects allocated to BANK0
   257  0011  1383               	bcf	3,7	;select IRP bank0
   258  0012  3035               	movlw	low (__pdataBANK0+10)
   259  0013  00FD               	movwf	btemp+-1
   260  0014  3002               	movlw	high __pidataBANK0
   261  0015  00FE               	movwf	btemp
   262  0016  3012               	movlw	low __pidataBANK0
   263  0017  00FF               	movwf	btemp+1
   264  0018  302B               	movlw	low __pdataBANK0
   265  0019  0084               	movwf	4
   266  001A  120A  118A  2203  120A  118A  	fcall	init_ram0
   267                           
   268                           ; Clear objects allocated to BANK0
   269  001F  01B5               	clrf	__pbssBANK0& (0+127)
   270  0020  01B6               	clrf	(__pbssBANK0+1)& (0+127)
   271  0021  01B7               	clrf	(__pbssBANK0+2)& (0+127)
   272                           
   273                           ; Clear objects allocated to COMMON
   274  0022  01F6               	clrf	__pbssCOMMON& (0+127)
   275  0023  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   276  0024  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   277  0025  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   278  0026                     end_of_initialization:	
   279                           ;End of C runtime variable initialization code
   280                           
   281  0026                     __end_of__initialization:
   282  0026  0183               	clrf	3
   283  0027  120A  118A  29D1   	ljmp	_main	;jump to C main() function
   284                           
   285                           	psect	bssCOMMON
   286  0076                     __pbssCOMMON:
   287  0076                     _unidad:
   288  0076                     	ds	1
   289  0077                     _decena:
   290  0077                     	ds	1
   291  0078                     _centena:
   292  0078                     	ds	1
   293  0079                     _valor:
   294  0079                     	ds	1
   295                           
   296                           	psect	bssBANK0
   297  0035                     __pbssBANK0:
   298  0035                     _multi:
   299  0035                     	ds	2
   300  0037                     _cambio:
   301  0037                     	ds	1
   302                           
   303                           	psect	dataBANK0
   304  002B                     __pdataBANK0:
   305  002B                     _display:
   306  002B                     	ds	10
   307                           
   308                           	psect	inittext
   309  01FF                     init_fetch0:	
   310                           ;	Called with low address in FSR and high address in W
   311                           
   312  01FF  087E               	movf	btemp,w
   313  0200  008A               	movwf	10
   314  0201  087F               	movf	btemp+1,w
   315  0202  0082               	movwf	2
   316  0203                     init_ram0:	
   317                           ;Called with:
   318                           ;	high address of idata address in btemp 
   319                           ;	low address of idata address in btemp+1 
   320                           ;	low address of data in FSR
   321                           ;	high address + 1 of data in btemp-1
   322                           
   323  0203  120A  118A  21FF  120A  118A  	fcall	init_fetch0
   324  0208  0080               	movwf	0
   325  0209  0A84               	incf	4,f
   326  020A  0804               	movf	4,w
   327  020B  067D               	xorwf	btemp+-1,w
   328  020C  1903               	btfsc	3,2
   329  020D  3400               	retlw	0
   330  020E  0AFF               	incf	btemp+1,f
   331  020F  1903               	btfsc	3,2
   332  0210  0AFE               	incf	btemp,f
   333  0211  2A03               	goto	init_ram0
   334                           
   335                           	psect	cstackCOMMON
   336  0070                     __pcstackCOMMON:
   337  0070                     ?_config:
   338  0070                     ?_division:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ?_isr:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ??_isr:	
   345                           ; 1 bytes @ 0x0
   346                           
   347  0070                     ?_main:	
   348                           ; 1 bytes @ 0x0
   349                           
   350                           
   351                           ; 1 bytes @ 0x0
   352  0070                     	ds	4
   353  0074                     ??_config:
   354  0074                     ??___awdiv:	
   355                           ; 1 bytes @ 0x4
   356                           
   357  0074                     ??___awmod:	
   358                           ; 1 bytes @ 0x4
   359                           
   360                           
   361                           ; 1 bytes @ 0x4
   362  0074                     	ds	1
   363  0075                     ??_main:
   364                           
   365                           ; 1 bytes @ 0x5
   366  0075                     	ds	1
   367                           
   368                           	psect	cstackBANK0
   369  0020                     __pcstackBANK0:
   370  0020                     ?___awdiv:
   371  0020                     ?___awmod:	
   372                           ; 2 bytes @ 0x0
   373                           
   374  0020                     ___awdiv@divisor:	
   375                           ; 2 bytes @ 0x0
   376                           
   377  0020                     ___awmod@divisor:	
   378                           ; 2 bytes @ 0x0
   379                           
   380                           
   381                           ; 2 bytes @ 0x0
   382  0020                     	ds	2
   383  0022                     ___awdiv@dividend:
   384  0022                     ___awmod@dividend:	
   385                           ; 2 bytes @ 0x2
   386                           
   387                           
   388                           ; 2 bytes @ 0x2
   389  0022                     	ds	2
   390  0024                     ___awdiv@counter:
   391  0024                     ___awmod@counter:	
   392                           ; 1 bytes @ 0x4
   393                           
   394                           
   395                           ; 1 bytes @ 0x4
   396  0024                     	ds	1
   397  0025                     ___awdiv@sign:
   398  0025                     ___awmod@sign:	
   399                           ; 1 bytes @ 0x5
   400                           
   401                           
   402                           ; 1 bytes @ 0x5
   403  0025                     	ds	1
   404  0026                     ___awdiv@quotient:
   405                           
   406                           ; 2 bytes @ 0x6
   407  0026                     	ds	2
   408  0028                     ??_division:
   409                           
   410                           ; 1 bytes @ 0x8
   411  0028                     	ds	3
   412                           
   413                           	psect	maintext
   414  01D1                     __pmaintext:	
   415 ;;
   416 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   417 ;;
   418 ;; *************** function _main *****************
   419 ;; Defined at:
   420 ;;		line 80 in file "main8.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg, status,2, status,0, pclath, cstack
   429 ;; Tracked objects:
   430 ;;		On entry : B00/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          1       0       0       0       0
   437 ;;      Totals:         1       0       0       0       0
   438 ;;Total ram usage:        1 bytes
   439 ;; Hardware stack levels required when called:    3
   440 ;; This function calls:
   441 ;;		_config
   442 ;;		_division
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _main
   450  01D1                     _main:
   451  01D1                     l1110:	
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   454                           
   455                           
   456                           ;main8.c: 81:     config();
   457  01D1  120A  118A  219D  120A  118A  	fcall	_config
   458  01D6                     l1112:
   459                           
   460                           ;main8.c: 82:     ADCON0bits.GO = 1;
   461  01D6  1283               	bcf	3,5	;RP0=0, select bank0
   462  01D7  1303               	bcf	3,6	;RP1=0, select bank0
   463  01D8  149F               	bsf	31,1	;volatile
   464  01D9                     l1114:
   465                           
   466                           ;main8.c: 85:         if (ADCON0bits.GO == 0){
   467  01D9  1283               	bcf	3,5	;RP0=0, select bank0
   468  01DA  1303               	bcf	3,6	;RP1=0, select bank0
   469  01DB  189F               	btfsc	31,1	;volatile
   470  01DC  29DE               	goto	u721
   471  01DD  29DF               	goto	u720
   472  01DE                     u721:
   473  01DE  29F6               	goto	l1126
   474  01DF                     u720:
   475  01DF                     l1116:
   476                           
   477                           ;main8.c: 86:             if (ADCON0bits.CHS == 1){
   478  01DF  0C1F               	rrf	31,w	;volatile
   479  01E0  00F5               	movwf	??_main
   480  01E1  0C75               	rrf	??_main,w
   481  01E2  390F               	andlw	15
   482  01E3  3A01               	xorlw	1
   483  01E4  1D03               	skipz
   484  01E5  29E7               	goto	u731
   485  01E6  29E8               	goto	u730
   486  01E7                     u731:
   487  01E7  29EB               	goto	l1120
   488  01E8                     u730:
   489  01E8                     l1118:
   490                           
   491                           ;main8.c: 87:                 ADCON0bits.CHS = 0;}
   492  01E8  30C3               	movlw	-61
   493  01E9  059F               	andwf	31,f	;volatile
   494  01EA  29EF               	goto	l1122
   495  01EB                     l1120:
   496                           
   497                           ;main8.c: 89:                 ADCON0bits.CHS = 1;}
   498  01EB  081F               	movf	31,w	;volatile
   499  01EC  39C3               	andlw	-61
   500  01ED  3804               	iorlw	4
   501  01EE  009F               	movwf	31	;volatile
   502  01EF                     l1122:
   503                           
   504                           ;main8.c: 90:             _delay((unsigned long)((100)*(4000000/4000000.0)));
   505  01EF  3021               	movlw	33
   506  01F0  00F5               	movwf	??_main
   507  01F1                     u747:
   508  01F1  0BF5               	decfsz	??_main,f
   509  01F2  29F1               	goto	u747
   510  01F3                     l1124:
   511                           
   512                           ;main8.c: 91:             ADCON0bits.GO = 1;
   513  01F3  1283               	bcf	3,5	;RP0=0, select bank0
   514  01F4  1303               	bcf	3,6	;RP1=0, select bank0
   515  01F5  149F               	bsf	31,1	;volatile
   516  01F6                     l1126:
   517                           
   518                           ;main8.c: 93:         division();
   519  01F6  120A  118A  2093  120A  118A  	fcall	_division
   520  01FB  29D9               	goto	l1114
   521  01FC  120A  118A  280E   	ljmp	start
   522  01FF                     __end_of_main:
   523                           
   524                           	psect	text1
   525  0093                     __ptext1:	
   526 ;; *************** function _division *****************
   527 ;; Defined at:
   528 ;;		line 143 in file "main8.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      unsigned char 
   535 ;; Registers used:
   536 ;;		wreg, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : 0/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       3       0       0       0
   545 ;;      Totals:         0       3       0       0       0
   546 ;;Total ram usage:        3 bytes
   547 ;; Hardware stack levels used:    1
   548 ;; Hardware stack levels required when called:    2
   549 ;; This function calls:
   550 ;;		___awdiv
   551 ;;		___awmod
   552 ;; This function is called by:
   553 ;;		_main
   554 ;; This function uses a non-reentrant model
   555 ;;
   556                           
   557                           
   558                           ;psect for function _division
   559  0093                     _division:
   560  0093                     l1108:	
   561                           ;incstack = 0
   562                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   563                           
   564                           
   565                           ;main8.c: 144:     centena = valor/100;
   566  0093  3064               	movlw	100
   567  0094  1283               	bcf	3,5	;RP0=0, select bank0
   568  0095  1303               	bcf	3,6	;RP1=0, select bank0
   569  0096  00A0               	movwf	___awdiv@divisor
   570  0097  3000               	movlw	0
   571  0098  00A1               	movwf	___awdiv@divisor+1
   572  0099  0879               	movf	_valor,w
   573  009A  00A8               	movwf	??_division
   574  009B  01A9               	clrf	??_division+1
   575  009C  0828               	movf	??_division,w
   576  009D  00A2               	movwf	___awdiv@dividend
   577  009E  0829               	movf	??_division+1,w
   578  009F  00A3               	movwf	___awdiv@dividend+1
   579  00A0  120A  118A  202A  120A  118A  	fcall	___awdiv
   580  00A5  1283               	bcf	3,5	;RP0=0, select bank0
   581  00A6  1303               	bcf	3,6	;RP1=0, select bank0
   582  00A7  0820               	movf	?___awdiv,w
   583  00A8  00AA               	movwf	??_division+2
   584  00A9  082A               	movf	??_division+2,w
   585  00AA  00F8               	movwf	_centena
   586                           
   587                           ;main8.c: 145:     unidad = valor%100;
   588  00AB  3064               	movlw	100
   589  00AC  00A0               	movwf	___awmod@divisor
   590  00AD  3000               	movlw	0
   591  00AE  00A1               	movwf	___awmod@divisor+1
   592  00AF  0879               	movf	_valor,w
   593  00B0  00A8               	movwf	??_division
   594  00B1  01A9               	clrf	??_division+1
   595  00B2  0828               	movf	??_division,w
   596  00B3  00A2               	movwf	___awmod@dividend
   597  00B4  0829               	movf	??_division+1,w
   598  00B5  00A3               	movwf	___awmod@dividend+1
   599  00B6  120A  118A  20EE  120A  118A  	fcall	___awmod
   600  00BB  1283               	bcf	3,5	;RP0=0, select bank0
   601  00BC  1303               	bcf	3,6	;RP1=0, select bank0
   602  00BD  0820               	movf	?___awmod,w
   603  00BE  00AA               	movwf	??_division+2
   604  00BF  082A               	movf	??_division+2,w
   605  00C0  00F6               	movwf	_unidad
   606                           
   607                           ;main8.c: 146:     decena = unidad/10;
   608  00C1  300A               	movlw	10
   609  00C2  00A0               	movwf	___awdiv@divisor
   610  00C3  3000               	movlw	0
   611  00C4  00A1               	movwf	___awdiv@divisor+1
   612  00C5  0876               	movf	_unidad,w
   613  00C6  00A8               	movwf	??_division
   614  00C7  01A9               	clrf	??_division+1
   615  00C8  0828               	movf	??_division,w
   616  00C9  00A2               	movwf	___awdiv@dividend
   617  00CA  0829               	movf	??_division+1,w
   618  00CB  00A3               	movwf	___awdiv@dividend+1
   619  00CC  120A  118A  202A  120A  118A  	fcall	___awdiv
   620  00D1  1283               	bcf	3,5	;RP0=0, select bank0
   621  00D2  1303               	bcf	3,6	;RP1=0, select bank0
   622  00D3  0820               	movf	?___awdiv,w
   623  00D4  00AA               	movwf	??_division+2
   624  00D5  082A               	movf	??_division+2,w
   625  00D6  00F7               	movwf	_decena
   626                           
   627                           ;main8.c: 147:     unidad = unidad%10;
   628  00D7  300A               	movlw	10
   629  00D8  00A0               	movwf	___awmod@divisor
   630  00D9  3000               	movlw	0
   631  00DA  00A1               	movwf	___awmod@divisor+1
   632  00DB  0876               	movf	_unidad,w
   633  00DC  00A8               	movwf	??_division
   634  00DD  01A9               	clrf	??_division+1
   635  00DE  0828               	movf	??_division,w
   636  00DF  00A2               	movwf	___awmod@dividend
   637  00E0  0829               	movf	??_division+1,w
   638  00E1  00A3               	movwf	___awmod@dividend+1
   639  00E2  120A  118A  20EE  120A  118A  	fcall	___awmod
   640  00E7  1283               	bcf	3,5	;RP0=0, select bank0
   641  00E8  1303               	bcf	3,6	;RP1=0, select bank0
   642  00E9  0820               	movf	?___awmod,w
   643  00EA  00AA               	movwf	??_division+2
   644  00EB  082A               	movf	??_division+2,w
   645  00EC  00F6               	movwf	_unidad
   646  00ED                     l92:
   647  00ED  0008               	return
   648  00EE                     __end_of_division:
   649                           
   650                           	psect	text2
   651  00EE                     __ptext2:	
   652 ;; *************** function ___awmod *****************
   653 ;; Defined at:
   654 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  divisor         2    0[BANK0 ] int 
   657 ;;  dividend        2    2[BANK0 ] int 
   658 ;; Auto vars:     Size  Location     Type
   659 ;;  sign            1    5[BANK0 ] unsigned char 
   660 ;;  counter         1    4[BANK0 ] unsigned char 
   661 ;; Return value:  Size  Location     Type
   662 ;;                  2    0[BANK0 ] int 
   663 ;; Registers used:
   664 ;;		wreg, status,2, status,0
   665 ;; Tracked objects:
   666 ;;		On entry : 0/0
   667 ;;		On exit  : 0/0
   668 ;;		Unchanged: 0/0
   669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   670 ;;      Params:         0       4       0       0       0
   671 ;;      Locals:         0       2       0       0       0
   672 ;;      Temps:          1       0       0       0       0
   673 ;;      Totals:         1       6       0       0       0
   674 ;;Total ram usage:        7 bytes
   675 ;; Hardware stack levels used:    1
   676 ;; Hardware stack levels required when called:    1
   677 ;; This function calls:
   678 ;;		Nothing
   679 ;; This function is called by:
   680 ;;		_division
   681 ;; This function uses a non-reentrant model
   682 ;;
   683                           
   684                           
   685                           ;psect for function ___awmod
   686  00EE                     ___awmod:
   687  00EE                     l1070:	
   688                           ;incstack = 0
   689                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   690                           
   691  00EE  1283               	bcf	3,5	;RP0=0, select bank0
   692  00EF  1303               	bcf	3,6	;RP1=0, select bank0
   693  00F0  01A5               	clrf	___awmod@sign
   694  00F1                     l1072:
   695  00F1  1FA3               	btfss	___awmod@dividend+1,7
   696  00F2  28F4               	goto	u631
   697  00F3  28F5               	goto	u630
   698  00F4                     u631:
   699  00F4  28FC               	goto	l1078
   700  00F5                     u630:
   701  00F5                     l1074:
   702  00F5  09A2               	comf	___awmod@dividend,f
   703  00F6  09A3               	comf	___awmod@dividend+1,f
   704  00F7  0AA2               	incf	___awmod@dividend,f
   705  00F8  1903               	skipnz
   706  00F9  0AA3               	incf	___awmod@dividend+1,f
   707  00FA                     l1076:
   708  00FA  01A5               	clrf	___awmod@sign
   709  00FB  0AA5               	incf	___awmod@sign,f
   710  00FC                     l1078:
   711  00FC  1FA1               	btfss	___awmod@divisor+1,7
   712  00FD  28FF               	goto	u641
   713  00FE  2900               	goto	u640
   714  00FF                     u641:
   715  00FF  2905               	goto	l1082
   716  0100                     u640:
   717  0100                     l1080:
   718  0100  09A0               	comf	___awmod@divisor,f
   719  0101  09A1               	comf	___awmod@divisor+1,f
   720  0102  0AA0               	incf	___awmod@divisor,f
   721  0103  1903               	skipnz
   722  0104  0AA1               	incf	___awmod@divisor+1,f
   723  0105                     l1082:
   724  0105  0820               	movf	___awmod@divisor,w
   725  0106  0421               	iorwf	___awmod@divisor+1,w
   726  0107  1903               	btfsc	3,2
   727  0108  290A               	goto	u651
   728  0109  290B               	goto	u650
   729  010A                     u651:
   730  010A  293A               	goto	l1100
   731  010B                     u650:
   732  010B                     l1084:
   733  010B  01A4               	clrf	___awmod@counter
   734  010C  0AA4               	incf	___awmod@counter,f
   735  010D  2919               	goto	l1090
   736  010E                     l1086:
   737  010E  3001               	movlw	1
   738  010F                     u665:
   739  010F  1003               	clrc
   740  0110  0DA0               	rlf	___awmod@divisor,f
   741  0111  0DA1               	rlf	___awmod@divisor+1,f
   742  0112  3EFF               	addlw	-1
   743  0113  1D03               	skipz
   744  0114  290F               	goto	u665
   745  0115                     l1088:
   746  0115  3001               	movlw	1
   747  0116  00F4               	movwf	??___awmod
   748  0117  0874               	movf	??___awmod,w
   749  0118  07A4               	addwf	___awmod@counter,f
   750  0119                     l1090:
   751  0119  1FA1               	btfss	___awmod@divisor+1,7
   752  011A  291C               	goto	u671
   753  011B  291D               	goto	u670
   754  011C                     u671:
   755  011C  290E               	goto	l1086
   756  011D                     u670:
   757  011D                     l1092:
   758  011D  0821               	movf	___awmod@divisor+1,w
   759  011E  0223               	subwf	___awmod@dividend+1,w
   760  011F  1D03               	skipz
   761  0120  2923               	goto	u685
   762  0121  0820               	movf	___awmod@divisor,w
   763  0122  0222               	subwf	___awmod@dividend,w
   764  0123                     u685:
   765  0123  1C03               	skipc
   766  0124  2926               	goto	u681
   767  0125  2927               	goto	u680
   768  0126                     u681:
   769  0126  292D               	goto	l1096
   770  0127                     u680:
   771  0127                     l1094:
   772  0127  0820               	movf	___awmod@divisor,w
   773  0128  02A2               	subwf	___awmod@dividend,f
   774  0129  0821               	movf	___awmod@divisor+1,w
   775  012A  1C03               	skipc
   776  012B  03A3               	decf	___awmod@dividend+1,f
   777  012C  02A3               	subwf	___awmod@dividend+1,f
   778  012D                     l1096:
   779  012D  3001               	movlw	1
   780  012E                     u695:
   781  012E  1003               	clrc
   782  012F  0CA1               	rrf	___awmod@divisor+1,f
   783  0130  0CA0               	rrf	___awmod@divisor,f
   784  0131  3EFF               	addlw	-1
   785  0132  1D03               	skipz
   786  0133  292E               	goto	u695
   787  0134                     l1098:
   788  0134  3001               	movlw	1
   789  0135  02A4               	subwf	___awmod@counter,f
   790  0136  1D03               	btfss	3,2
   791  0137  2939               	goto	u701
   792  0138  293A               	goto	u700
   793  0139                     u701:
   794  0139  291D               	goto	l1092
   795  013A                     u700:
   796  013A                     l1100:
   797  013A  0825               	movf	___awmod@sign,w
   798  013B  1903               	btfsc	3,2
   799  013C  293E               	goto	u711
   800  013D  293F               	goto	u710
   801  013E                     u711:
   802  013E  2944               	goto	l1104
   803  013F                     u710:
   804  013F                     l1102:
   805  013F  09A2               	comf	___awmod@dividend,f
   806  0140  09A3               	comf	___awmod@dividend+1,f
   807  0141  0AA2               	incf	___awmod@dividend,f
   808  0142  1903               	skipnz
   809  0143  0AA3               	incf	___awmod@dividend+1,f
   810  0144                     l1104:
   811  0144  0823               	movf	___awmod@dividend+1,w
   812  0145  00A1               	movwf	?___awmod+1
   813  0146  0822               	movf	___awmod@dividend,w
   814  0147  00A0               	movwf	?___awmod
   815  0148                     l344:
   816  0148  0008               	return
   817  0149                     __end_of___awmod:
   818                           
   819                           	psect	text3
   820  002A                     __ptext3:	
   821 ;; *************** function ___awdiv *****************
   822 ;; Defined at:
   823 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   824 ;; Parameters:    Size  Location     Type
   825 ;;  divisor         2    0[BANK0 ] int 
   826 ;;  dividend        2    2[BANK0 ] int 
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  quotient        2    6[BANK0 ] int 
   829 ;;  sign            1    5[BANK0 ] unsigned char 
   830 ;;  counter         1    4[BANK0 ] unsigned char 
   831 ;; Return value:  Size  Location     Type
   832 ;;                  2    0[BANK0 ] int 
   833 ;; Registers used:
   834 ;;		wreg, status,2, status,0
   835 ;; Tracked objects:
   836 ;;		On entry : 0/0
   837 ;;		On exit  : 0/0
   838 ;;		Unchanged: 0/0
   839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   840 ;;      Params:         0       4       0       0       0
   841 ;;      Locals:         0       4       0       0       0
   842 ;;      Temps:          1       0       0       0       0
   843 ;;      Totals:         1       8       0       0       0
   844 ;;Total ram usage:        9 bytes
   845 ;; Hardware stack levels used:    1
   846 ;; Hardware stack levels required when called:    1
   847 ;; This function calls:
   848 ;;		Nothing
   849 ;; This function is called by:
   850 ;;		_division
   851 ;; This function uses a non-reentrant model
   852 ;;
   853                           
   854                           
   855                           ;psect for function ___awdiv
   856  002A                     ___awdiv:
   857  002A                     l1026:	
   858                           ;incstack = 0
   859                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   860                           
   861  002A  1283               	bcf	3,5	;RP0=0, select bank0
   862  002B  1303               	bcf	3,6	;RP1=0, select bank0
   863  002C  01A5               	clrf	___awdiv@sign
   864  002D                     l1028:
   865  002D  1FA1               	btfss	___awdiv@divisor+1,7
   866  002E  2830               	goto	u531
   867  002F  2831               	goto	u530
   868  0030                     u531:
   869  0030  2838               	goto	l1034
   870  0031                     u530:
   871  0031                     l1030:
   872  0031  09A0               	comf	___awdiv@divisor,f
   873  0032  09A1               	comf	___awdiv@divisor+1,f
   874  0033  0AA0               	incf	___awdiv@divisor,f
   875  0034  1903               	skipnz
   876  0035  0AA1               	incf	___awdiv@divisor+1,f
   877  0036                     l1032:
   878  0036  01A5               	clrf	___awdiv@sign
   879  0037  0AA5               	incf	___awdiv@sign,f
   880  0038                     l1034:
   881  0038  1FA3               	btfss	___awdiv@dividend+1,7
   882  0039  283B               	goto	u541
   883  003A  283C               	goto	u540
   884  003B                     u541:
   885  003B  2845               	goto	l1040
   886  003C                     u540:
   887  003C                     l1036:
   888  003C  09A2               	comf	___awdiv@dividend,f
   889  003D  09A3               	comf	___awdiv@dividend+1,f
   890  003E  0AA2               	incf	___awdiv@dividend,f
   891  003F  1903               	skipnz
   892  0040  0AA3               	incf	___awdiv@dividend+1,f
   893  0041                     l1038:
   894  0041  3001               	movlw	1
   895  0042  00F4               	movwf	??___awdiv
   896  0043  0874               	movf	??___awdiv,w
   897  0044  06A5               	xorwf	___awdiv@sign,f
   898  0045                     l1040:
   899  0045  01A6               	clrf	___awdiv@quotient
   900  0046  01A7               	clrf	___awdiv@quotient+1
   901  0047                     l1042:
   902  0047  0820               	movf	___awdiv@divisor,w
   903  0048  0421               	iorwf	___awdiv@divisor+1,w
   904  0049  1903               	btfsc	3,2
   905  004A  284C               	goto	u551
   906  004B  284D               	goto	u550
   907  004C                     u551:
   908  004C  2884               	goto	l1062
   909  004D                     u550:
   910  004D                     l1044:
   911  004D  01A4               	clrf	___awdiv@counter
   912  004E  0AA4               	incf	___awdiv@counter,f
   913  004F  285B               	goto	l1050
   914  0050                     l1046:
   915  0050  3001               	movlw	1
   916  0051                     u565:
   917  0051  1003               	clrc
   918  0052  0DA0               	rlf	___awdiv@divisor,f
   919  0053  0DA1               	rlf	___awdiv@divisor+1,f
   920  0054  3EFF               	addlw	-1
   921  0055  1D03               	skipz
   922  0056  2851               	goto	u565
   923  0057                     l1048:
   924  0057  3001               	movlw	1
   925  0058  00F4               	movwf	??___awdiv
   926  0059  0874               	movf	??___awdiv,w
   927  005A  07A4               	addwf	___awdiv@counter,f
   928  005B                     l1050:
   929  005B  1FA1               	btfss	___awdiv@divisor+1,7
   930  005C  285E               	goto	u571
   931  005D  285F               	goto	u570
   932  005E                     u571:
   933  005E  2850               	goto	l1046
   934  005F                     u570:
   935  005F                     l1052:
   936  005F  3001               	movlw	1
   937  0060                     u585:
   938  0060  1003               	clrc
   939  0061  0DA6               	rlf	___awdiv@quotient,f
   940  0062  0DA7               	rlf	___awdiv@quotient+1,f
   941  0063  3EFF               	addlw	-1
   942  0064  1D03               	skipz
   943  0065  2860               	goto	u585
   944  0066  0821               	movf	___awdiv@divisor+1,w
   945  0067  0223               	subwf	___awdiv@dividend+1,w
   946  0068  1D03               	skipz
   947  0069  286C               	goto	u595
   948  006A  0820               	movf	___awdiv@divisor,w
   949  006B  0222               	subwf	___awdiv@dividend,w
   950  006C                     u595:
   951  006C  1C03               	skipc
   952  006D  286F               	goto	u591
   953  006E  2870               	goto	u590
   954  006F                     u591:
   955  006F  2877               	goto	l1058
   956  0070                     u590:
   957  0070                     l1054:
   958  0070  0820               	movf	___awdiv@divisor,w
   959  0071  02A2               	subwf	___awdiv@dividend,f
   960  0072  0821               	movf	___awdiv@divisor+1,w
   961  0073  1C03               	skipc
   962  0074  03A3               	decf	___awdiv@dividend+1,f
   963  0075  02A3               	subwf	___awdiv@dividend+1,f
   964  0076                     l1056:
   965  0076  1426               	bsf	___awdiv@quotient,0
   966  0077                     l1058:
   967  0077  3001               	movlw	1
   968  0078                     u605:
   969  0078  1003               	clrc
   970  0079  0CA1               	rrf	___awdiv@divisor+1,f
   971  007A  0CA0               	rrf	___awdiv@divisor,f
   972  007B  3EFF               	addlw	-1
   973  007C  1D03               	skipz
   974  007D  2878               	goto	u605
   975  007E                     l1060:
   976  007E  3001               	movlw	1
   977  007F  02A4               	subwf	___awdiv@counter,f
   978  0080  1D03               	btfss	3,2
   979  0081  2883               	goto	u611
   980  0082  2884               	goto	u610
   981  0083                     u611:
   982  0083  285F               	goto	l1052
   983  0084                     u610:
   984  0084                     l1062:
   985  0084  0825               	movf	___awdiv@sign,w
   986  0085  1903               	btfsc	3,2
   987  0086  2888               	goto	u621
   988  0087  2889               	goto	u620
   989  0088                     u621:
   990  0088  288E               	goto	l1066
   991  0089                     u620:
   992  0089                     l1064:
   993  0089  09A6               	comf	___awdiv@quotient,f
   994  008A  09A7               	comf	___awdiv@quotient+1,f
   995  008B  0AA6               	incf	___awdiv@quotient,f
   996  008C  1903               	skipnz
   997  008D  0AA7               	incf	___awdiv@quotient+1,f
   998  008E                     l1066:
   999  008E  0827               	movf	___awdiv@quotient+1,w
  1000  008F  00A1               	movwf	?___awdiv+1
  1001  0090  0826               	movf	___awdiv@quotient,w
  1002  0091  00A0               	movwf	?___awdiv
  1003  0092                     l331:
  1004  0092  0008               	return
  1005  0093                     __end_of___awdiv:
  1006                           
  1007                           	psect	text4
  1008  019D                     __ptext4:	
  1009 ;; *************** function _config *****************
  1010 ;; Defined at:
  1011 ;;		line 98 in file "main8.c"
  1012 ;; Parameters:    Size  Location     Type
  1013 ;;		None
  1014 ;; Auto vars:     Size  Location     Type
  1015 ;;		None
  1016 ;; Return value:  Size  Location     Type
  1017 ;;                  1    wreg      void 
  1018 ;; Registers used:
  1019 ;;		wreg, status,2, status,0
  1020 ;; Tracked objects:
  1021 ;;		On entry : 0/0
  1022 ;;		On exit  : 0/0
  1023 ;;		Unchanged: 0/0
  1024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1025 ;;      Params:         0       0       0       0       0
  1026 ;;      Locals:         0       0       0       0       0
  1027 ;;      Temps:          0       0       0       0       0
  1028 ;;      Totals:         0       0       0       0       0
  1029 ;;Total ram usage:        0 bytes
  1030 ;; Hardware stack levels used:    1
  1031 ;; Hardware stack levels required when called:    1
  1032 ;; This function calls:
  1033 ;;		Nothing
  1034 ;; This function is called by:
  1035 ;;		_main
  1036 ;; This function uses a non-reentrant model
  1037 ;;
  1038                           
  1039                           
  1040                           ;psect for function _config
  1041  019D                     _config:
  1042  019D                     l766:	
  1043                           ;incstack = 0
  1044                           ; Regs used in _config: [wreg+status,2+status,0]
  1045                           
  1046                           
  1047                           ;main8.c: 100:     ANSEL = 0b00000011;
  1048  019D  3003               	movlw	3
  1049  019E  1683               	bsf	3,5	;RP0=1, select bank3
  1050  019F  1703               	bsf	3,6	;RP1=1, select bank3
  1051  01A0  0088               	movwf	8	;volatile
  1052                           
  1053                           ;main8.c: 101:     ANSELH = 0b11111111;
  1054  01A1  30FF               	movlw	255
  1055  01A2  0089               	movwf	9	;volatile
  1056                           
  1057                           ;main8.c: 103:     TRISA = 0b00000011;
  1058  01A3  3003               	movlw	3
  1059  01A4  1683               	bsf	3,5	;RP0=1, select bank1
  1060  01A5  1303               	bcf	3,6	;RP1=0, select bank1
  1061  01A6  0085               	movwf	5	;volatile
  1062  01A7                     l768:
  1063                           
  1064                           ;main8.c: 105:     TRISC = 0x00;
  1065  01A7  0187               	clrf	7	;volatile
  1066  01A8                     l770:
  1067                           
  1068                           ;main8.c: 106:     TRISD = 0x00;
  1069  01A8  0188               	clrf	8	;volatile
  1070  01A9                     l772:
  1071                           
  1072                           ;main8.c: 107:     TRISE = 0x00;
  1073  01A9  0189               	clrf	9	;volatile
  1074  01AA                     l774:
  1075                           
  1076                           ;main8.c: 109:     PORTA = 0x00;
  1077  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  1078  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  1079  01AC  0185               	clrf	5	;volatile
  1080  01AD                     l776:
  1081                           
  1082                           ;main8.c: 110:     PORTB = 0x00;
  1083  01AD  0186               	clrf	6	;volatile
  1084  01AE                     l778:
  1085                           
  1086                           ;main8.c: 111:     PORTC = 0x00;
  1087  01AE  0187               	clrf	7	;volatile
  1088  01AF                     l780:
  1089                           
  1090                           ;main8.c: 112:     PORTD = 0x00;
  1091  01AF  0188               	clrf	8	;volatile
  1092  01B0                     l782:
  1093                           
  1094                           ;main8.c: 113:     PORTE = 0x00;
  1095  01B0  0189               	clrf	9	;volatile
  1096  01B1                     l784:
  1097                           
  1098                           ;main8.c: 115:     OSCCONbits.IRCF2 = 0;
  1099  01B1  1683               	bsf	3,5	;RP0=1, select bank1
  1100  01B2  1303               	bcf	3,6	;RP1=0, select bank1
  1101  01B3  130F               	bcf	15,6	;volatile
  1102  01B4                     l786:
  1103                           
  1104                           ;main8.c: 116:     OSCCONbits.IRCF1 = 1;
  1105  01B4  168F               	bsf	15,5	;volatile
  1106  01B5                     l788:
  1107                           
  1108                           ;main8.c: 117:     OSCCONbits.IRCF0 = 0;
  1109  01B5  120F               	bcf	15,4	;volatile
  1110  01B6                     l790:
  1111                           
  1112                           ;main8.c: 118:     OSCCONbits.SCS = 1;
  1113  01B6  140F               	bsf	15,0	;volatile
  1114  01B7                     l792:
  1115                           
  1116                           ;main8.c: 120:     OPTION_REGbits.T0CS = 0;
  1117  01B7  1281               	bcf	1,5	;volatile
  1118  01B8                     l794:
  1119                           
  1120                           ;main8.c: 121:     OPTION_REGbits.PSA = 0;
  1121  01B8  1181               	bcf	1,3	;volatile
  1122  01B9                     l796:
  1123                           
  1124                           ;main8.c: 122:     OPTION_REGbits.PS2 = 1;
  1125  01B9  1501               	bsf	1,2	;volatile
  1126  01BA                     l798:
  1127                           
  1128                           ;main8.c: 123:     OPTION_REGbits.PS1 = 1;
  1129  01BA  1481               	bsf	1,1	;volatile
  1130  01BB                     l800:
  1131                           
  1132                           ;main8.c: 124:     OPTION_REGbits.PS0 = 1;
  1133  01BB  1401               	bsf	1,0	;volatile
  1134  01BC                     l802:
  1135                           
  1136                           ;main8.c: 126:     INTCONbits.GIE = 1;
  1137  01BC  178B               	bsf	11,7	;volatile
  1138  01BD                     l804:
  1139                           
  1140                           ;main8.c: 127:     INTCONbits.T0IE = 1;
  1141  01BD  168B               	bsf	11,5	;volatile
  1142  01BE                     l806:
  1143                           
  1144                           ;main8.c: 128:     INTCONbits.T0IF = 0;
  1145  01BE  110B               	bcf	11,2	;volatile
  1146  01BF                     l808:
  1147                           
  1148                           ;main8.c: 129:     INTCONbits.PEIE = 1;
  1149  01BF  170B               	bsf	11,6	;volatile
  1150  01C0                     l810:
  1151                           
  1152                           ;main8.c: 130:     PIE1bits.ADIE = 1;
  1153  01C0  170C               	bsf	12,6	;volatile
  1154  01C1                     l812:
  1155                           
  1156                           ;main8.c: 131:     PIR1bits.ADIF = 0;
  1157  01C1  1283               	bcf	3,5	;RP0=0, select bank0
  1158  01C2  1303               	bcf	3,6	;RP1=0, select bank0
  1159  01C3  130C               	bcf	12,6	;volatile
  1160  01C4                     l814:
  1161                           
  1162                           ;main8.c: 133:     ADCON1bits.ADFM = 0;
  1163  01C4  1683               	bsf	3,5	;RP0=1, select bank1
  1164  01C5  1303               	bcf	3,6	;RP1=0, select bank1
  1165  01C6  139F               	bcf	31,7	;volatile
  1166  01C7                     l816:
  1167                           
  1168                           ;main8.c: 134:     ADCON1bits.VCFG0 = 0;
  1169  01C7  121F               	bcf	31,4	;volatile
  1170  01C8                     l818:
  1171                           
  1172                           ;main8.c: 135:     ADCON1bits.VCFG1 = 0;
  1173  01C8  129F               	bcf	31,5	;volatile
  1174  01C9                     l820:
  1175                           
  1176                           ;main8.c: 136:     ADCON0bits.ADCS0 = 1;
  1177  01C9  1283               	bcf	3,5	;RP0=0, select bank0
  1178  01CA  1303               	bcf	3,6	;RP1=0, select bank0
  1179  01CB  171F               	bsf	31,6	;volatile
  1180  01CC                     l822:
  1181                           
  1182                           ;main8.c: 137:     ADCON0bits.ADCS1 = 1;
  1183  01CC  179F               	bsf	31,7	;volatile
  1184  01CD                     l824:
  1185                           
  1186                           ;main8.c: 138:     ADCON0bits.CHS = 0;
  1187  01CD  30C3               	movlw	-61
  1188  01CE  059F               	andwf	31,f	;volatile
  1189  01CF                     l826:
  1190                           
  1191                           ;main8.c: 139:     ADCON0bits.ADON = 1;
  1192  01CF  141F               	bsf	31,0	;volatile
  1193  01D0                     l89:
  1194  01D0  0008               	return
  1195  01D1                     __end_of_config:
  1196                           
  1197                           	psect	text5
  1198  0149                     __ptext5:	
  1199 ;; *************** function _isr *****************
  1200 ;; Defined at:
  1201 ;;		line 43 in file "main8.c"
  1202 ;; Parameters:    Size  Location     Type
  1203 ;;		None
  1204 ;; Auto vars:     Size  Location     Type
  1205 ;;		None
  1206 ;; Return value:  Size  Location     Type
  1207 ;;                  1    wreg      void 
  1208 ;; Registers used:
  1209 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1210 ;; Tracked objects:
  1211 ;;		On entry : 0/0
  1212 ;;		On exit  : 0/0
  1213 ;;		Unchanged: 0/0
  1214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1215 ;;      Params:         0       0       0       0       0
  1216 ;;      Locals:         0       0       0       0       0
  1217 ;;      Temps:          4       0       0       0       0
  1218 ;;      Totals:         4       0       0       0       0
  1219 ;;Total ram usage:        4 bytes
  1220 ;; Hardware stack levels used:    1
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		Interrupt level 1
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _isr
  1230  0149                     _isr:
  1231  0149                     i1l970:
  1232                           
  1233                           ;main8.c: 44:     if (T0IF == 1)
  1234  0149  1D0B               	btfss	11,2	;volatile
  1235  014A  294C               	goto	u46_21
  1236  014B  294D               	goto	u46_20
  1237  014C                     u46_21:
  1238  014C  2994               	goto	i1l75
  1239  014D                     u46_20:
  1240  014D                     i1l972:
  1241                           
  1242                           ;main8.c: 45:     {;main8.c: 46:         PORTEbits.RE2 = 0;
  1243  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1244  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1245  014F  1109               	bcf	9,2	;volatile
  1246                           
  1247                           ;main8.c: 47:         PORTEbits.RE0 = 1;
  1248  0150  1409               	bsf	9,0	;volatile
  1249  0151                     i1l974:
  1250                           
  1251                           ;main8.c: 48:         PORTD = (display[centena]);
  1252  0151  0878               	movf	_centena,w
  1253  0152  3E2B               	addlw	(low (_display| 0))& (0+255)
  1254  0153  0084               	movwf	4
  1255  0154  1383               	bcf	3,7	;select IRP bank0
  1256  0155  0800               	movf	0,w
  1257  0156  0088               	movwf	8	;volatile
  1258  0157                     i1l976:
  1259                           
  1260                           ;main8.c: 49:         multi = 0b00000001;
  1261  0157  3001               	movlw	1
  1262  0158  00B5               	movwf	_multi
  1263  0159  3000               	movlw	0
  1264  015A  00B6               	movwf	_multi+1
  1265  015B                     i1l978:
  1266                           
  1267                           ;main8.c: 51:         if (multi == 0b00000001)
  1268  015B  0335               	decf	_multi,w
  1269  015C  0436               	iorwf	_multi+1,w
  1270  015D  1D03               	btfss	3,2
  1271  015E  2960               	goto	u47_21
  1272  015F  2961               	goto	u47_20
  1273  0160                     u47_21:
  1274  0160  296C               	goto	i1l986
  1275  0161                     u47_20:
  1276  0161                     i1l980:
  1277                           
  1278                           ;main8.c: 52:         {;main8.c: 53:             PORTEbits.RE0 = 0;
  1279  0161  1009               	bcf	9,0	;volatile
  1280                           
  1281                           ;main8.c: 54:             PORTEbits.RE1 = 1;
  1282  0162  1489               	bsf	9,1	;volatile
  1283  0163                     i1l982:
  1284                           
  1285                           ;main8.c: 55:             PORTD = (display[decena]);
  1286  0163  0877               	movf	_decena,w
  1287  0164  3E2B               	addlw	(low (_display| 0))& (0+255)
  1288  0165  0084               	movwf	4
  1289  0166  0800               	movf	0,w
  1290  0167  0088               	movwf	8	;volatile
  1291  0168                     i1l984:
  1292                           
  1293                           ;main8.c: 56:             multi = 0b00000010;
  1294  0168  3002               	movlw	2
  1295  0169  00B5               	movwf	_multi
  1296  016A  3000               	movlw	0
  1297  016B  00B6               	movwf	_multi+1
  1298  016C                     i1l986:
  1299                           
  1300                           ;main8.c: 58:         if (multi == 0b00000010)
  1301  016C  3002               	movlw	2
  1302  016D  0635               	xorwf	_multi,w
  1303  016E  0436               	iorwf	_multi+1,w
  1304  016F  1D03               	btfss	3,2
  1305  0170  2972               	goto	u48_21
  1306  0171  2973               	goto	u48_20
  1307  0172                     u48_21:
  1308  0172  297C               	goto	i1l994
  1309  0173                     u48_20:
  1310  0173                     i1l988:
  1311                           
  1312                           ;main8.c: 59:         {;main8.c: 60:             PORTEbits.RE1 = 0;
  1313  0173  1089               	bcf	9,1	;volatile
  1314                           
  1315                           ;main8.c: 61:             PORTEbits.RE2 = 1;
  1316  0174  1509               	bsf	9,2	;volatile
  1317  0175                     i1l990:
  1318                           
  1319                           ;main8.c: 62:             PORTD = (display[unidad]);
  1320  0175  0876               	movf	_unidad,w
  1321  0176  3E2B               	addlw	(low (_display| 0))& (0+255)
  1322  0177  0084               	movwf	4
  1323  0178  0800               	movf	0,w
  1324  0179  0088               	movwf	8	;volatile
  1325  017A                     i1l992:
  1326                           
  1327                           ;main8.c: 63:             multi = 0x00;
  1328  017A  01B5               	clrf	_multi
  1329  017B  01B6               	clrf	_multi+1
  1330  017C                     i1l994:
  1331                           
  1332                           ;main8.c: 65:         INTCONbits.T0IF = 0;
  1333  017C  110B               	bcf	11,2	;volatile
  1334  017D                     i1l996:
  1335                           
  1336                           ;main8.c: 66:         TMR0 = 255;
  1337  017D  30FF               	movlw	255
  1338  017E  0081               	movwf	1	;volatile
  1339  017F                     i1l998:
  1340                           
  1341                           ;main8.c: 68:     if(PIR1bits.ADIF == 1){
  1342  017F  1F0C               	btfss	12,6	;volatile
  1343  0180  2982               	goto	u49_21
  1344  0181  2983               	goto	u49_20
  1345  0182                     u49_21:
  1346  0182  2994               	goto	i1l75
  1347  0183                     u49_20:
  1348  0183                     i1l1000:
  1349                           
  1350                           ;main8.c: 69:         if(ADCON0bits.CHS == 0)
  1351  0183  0C1F               	rrf	31,w	;volatile
  1352  0184  00F0               	movwf	??_isr
  1353  0185  0C70               	rrf	??_isr,w
  1354  0186  390F               	andlw	15
  1355  0187  3A00               	xorlw	0
  1356  0188  1D03               	skipz
  1357  0189  298B               	goto	u50_21
  1358  018A  298C               	goto	u50_20
  1359  018B                     u50_21:
  1360  018B  298F               	goto	i1l1004
  1361  018C                     u50_20:
  1362  018C                     i1l1002:
  1363                           
  1364                           ;main8.c: 70:             PORTC = ADRESH;
  1365  018C  081E               	movf	30,w	;volatile
  1366  018D  0087               	movwf	7	;volatile
  1367  018E  2993               	goto	i1l1006
  1368  018F                     i1l1004:
  1369                           
  1370                           ;main8.c: 73:             valor = ADRESH;
  1371  018F  081E               	movf	30,w	;volatile
  1372  0190  00F0               	movwf	??_isr
  1373  0191  0870               	movf	??_isr,w
  1374  0192  00F9               	movwf	_valor
  1375  0193                     i1l1006:
  1376                           
  1377                           ;main8.c: 75:         PIR1bits.ADIF = 0;
  1378  0193  130C               	bcf	12,6	;volatile
  1379  0194                     i1l75:
  1380  0194  0873               	movf	??_isr+3,w
  1381  0195  008A               	movwf	10
  1382  0196  0872               	movf	??_isr+2,w
  1383  0197  0084               	movwf	4
  1384  0198  0E71               	swapf	??_isr+1,w
  1385  0199  0083               	movwf	3
  1386  019A  0EFE               	swapf	btemp,f
  1387  019B  0E7E               	swapf	btemp,w
  1388  019C  0009               	retfie
  1389  019D                     __end_of_isr:
  1390  007E                     btemp	set	126	;btemp
  1391  007E                     wtemp0	set	126
  1392                           
  1393                           	psect	intentry
  1394  0004                     __pintentry:	
  1395                           ;incstack = 0
  1396                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1397                           
  1398  0004                     interrupt_function:
  1399  007E                     saved_w	set	btemp
  1400  0004  00FE               	movwf	btemp
  1401  0005  0E03               	swapf	3,w
  1402  0006  00F1               	movwf	??_isr+1
  1403  0007  0804               	movf	4,w
  1404  0008  00F2               	movwf	??_isr+2
  1405  0009  080A               	movf	10,w
  1406  000A  00F3               	movwf	??_isr+3
  1407  000B  120A  118A  2949   	ljmp	_isr
  1408                           
  1409                           	psect	config
  1410                           
  1411                           ;Config register CONFIG1 @ 0x2007
  1412                           ;	Oscillator Selection bits
  1413                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1414                           ;	Watchdog Timer Enable bit
  1415                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1416                           ;	Power-up Timer Enable bit
  1417                           ;	PWRTE = ON, PWRT enabled
  1418                           ;	RE3/MCLR pin function select bit
  1419                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1420                           ;	Code Protection bit
  1421                           ;	CP = OFF, Program memory code protection is disabled
  1422                           ;	Data Code Protection bit
  1423                           ;	CPD = OFF, Data memory code protection is disabled
  1424                           ;	Brown Out Reset Selection bits
  1425                           ;	BOREN = OFF, BOR disabled
  1426                           ;	Internal External Switchover bit
  1427                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1428                           ;	Fail-Safe Clock Monitor Enabled bit
  1429                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1430                           ;	Low Voltage Programming Enable bit
  1431                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1432                           ;	In-Circuit Debugger Mode bit
  1433                           ;	DEBUG = 0x1, unprogrammed default
  1434  2007                     	org	8199
  1435  2007  20C4               	dw	8388
  1436                           
  1437                           ;Config register CONFIG2 @ 0x2008
  1438                           ;	Brown-out Reset Selection bit
  1439                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1440                           ;	Flash Program Memory Self Write Enable bits
  1441                           ;	WRT = OFF, Write protection off
  1442  2008                     	org	8200
  1443  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                              5 COMMON     1     1      0
                             _config
                           _division
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _division
     ___awdiv
     ___awmod

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      18       5       30.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun Apr 25 15:17:35 2021

                      pc 0002                       l92 00ED                       l89 01D0  
           ___awdiv@sign 0025                       fsr 0004                      l331 0092  
                    l344 0148                      l800 01BB                      l810 01C0  
                    l802 01BC                      l820 01C9                      l812 01C1  
                    l804 01BD                      l822 01CC                      l814 01C4  
                    l806 01BE                      l824 01CD                      l816 01C7  
                    l808 01BF                      l826 01CF                      l818 01C8  
                    l770 01A8                      l780 01AF                      l772 01A9  
                    l790 01B6                      l782 01B0                      l774 01AA  
                    l766 019D                      l792 01B7                      l784 01B1  
                    l776 01AD                      l768 01A7                      l794 01B8  
                    l786 01B4                      l778 01AE                      l796 01B9  
                    l788 01B5                      l798 01BA                      u610 0084  
                    u530 0031                      u611 0083                      u531 0030  
                    u620 0089                      u540 003C                      u700 013A  
                    u621 0088                      u605 0078                      u541 003B  
                    u701 0139                      u550 004D                      u710 013F  
                    u630 00F5                      u551 004C                      u711 013E  
                    u631 00F4                      u640 0100                      u720 01DF  
                    u641 00FF                      u721 01DE                      u570 005F  
                    u650 010B                      u730 01E8                      u571 005E  
                    u651 010A                      u731 01E7                      u565 0051  
                    u590 0070                      u670 011D                      u591 006F  
                    u671 011C                      u680 0127                      u585 0060  
                    u681 0126                      u665 010F                      u595 006C  
                    u747 01F1                      u685 0123                      u695 012E  
                    _isr 0149                      fsr0 0004                      indf 0000  
           ___awmod@sign 0025                     l1100 013A                     l1030 0031  
                   l1102 013F                     l1110 01D1                     l1040 0045  
                   l1032 0036                     l1104 0144                     l1120 01EB  
                   l1112 01D6                     l1050 005B                     l1042 0047  
                   l1034 0038                     l1026 002A                     l1122 01EF  
                   l1114 01D9                     l1060 007E                     l1052 005F  
                   l1044 004D                     l1036 003C                     l1028 002D  
                   l1108 0093                     l1124 01F3                     l1116 01DF  
                   l1054 0070                     l1046 0050                     l1062 0084  
                   l1038 0041                     l1070 00EE                     l1118 01E8  
                   l1126 01F6                     l1064 0089                     l1056 0076  
                   l1048 0057                     l1080 0100                     l1072 00F1  
                   l1066 008E                     l1058 0077                     l1090 0119  
                   l1082 0105                     l1074 00F5                     l1092 011D  
                   l1084 010B                     l1076 00FA                     l1094 0127  
                   l1086 010E                     l1078 00FC                     l1096 012D  
                   l1088 0115                     l1098 0134                     ?_isr 0070  
                   _T0IF 005A                     i1l75 0194                     _TMR0 0001  
                   _main 01D1                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 0093  
        __end_of___awmod 0149                    _ANSEL 0188          ___awdiv@divisor 0020  
                  i1l970 0149                    i1l980 0161                    i1l972 014D  
                  i1l990 0175                    i1l982 0163                    i1l974 0151  
                  i1l992 017A                    i1l984 0168                    i1l976 0157  
                  i1l994 017C                    i1l986 016C                    i1l978 015B  
                  i1l996 017D                    i1l988 0173                    i1l998 017F  
        ___awdiv@counter 0024                    u50_20 018C                    u50_21 018B  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    u46_20 014D  
                  u46_21 014C                    u47_20 0161                    u47_21 0160  
                  u48_20 0173                    u48_21 0172                    u49_20 0183  
                  u49_21 0182                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089                    _valor 0079  
                  _multi 0035                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0011             __end_of_main 01FF  
                 ??_main 0075                   _ADRESH 001E         ___awdiv@dividend 0022  
                 _ANSELH 0189                   i1l1000 0183                   i1l1002 018C  
                 i1l1004 018F                   i1l1006 0193         __end_of_division 00EE  
                 _cambio 0037                ??___awdiv 0074                   _decena 0077  
              ??___awmod 0074                   _config 019D         ___awdiv@quotient 0026  
        ___awmod@divisor 0020          ___awmod@counter 0024                   _unidad 0076  
                 saved_w 007E  __end_of__initialization 0026           __pcstackCOMMON 0070  
           __pidataBANK0 0212           _OPTION_REGbits 0081               __pbssBANK0 0035  
             __pmaintext 01D1               __pintentry 0004                  ?_config 0070  
              ?_division 0070                  ___awdiv 002A                  ___awmod 00EE  
        __size_of_config 0034                  _centena 0078                  __ptext1 0093  
                __ptext2 00EE                  __ptext3 002A                  __ptext4 019D  
                __ptext5 0149                  _display 002B             __size_of_isr 0054  
       ___awmod@dividend 0022     end_of_initialization 0026               ??_division 0028  
              _PORTEbits 0009           __end_of_config 01D1      start_initialization 0011  
            __end_of_isr 019D               init_fetch0 01FF                 ??_config 0074  
            __pdataBANK0 002B              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0020        __size_of_division 005B                 ?___awdiv 0020  
               ?___awmod 0020        interrupt_function 0004                 _PIE1bits 008C  
               _PIR1bits 000C               _ADCON0bits 001F               _ADCON1bits 009F  
       __size_of___awdiv 0069         __size_of___awmod 005B                 _division 0093  
          __size_of_main 002E               _INTCONbits 000B                 init_ram0 0203  
               intlevel1 0000               _OSCCONbits 008F  
