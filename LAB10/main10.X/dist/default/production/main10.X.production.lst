

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 09 16:24:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.20
    17                           ; Generated 12/02/2020 GMT
    18                           ; 
    19                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206  0019                     _TXREG	set	25
   207  001A                     _RCREG	set	26
   208  000C                     _PIR1bits	set	12
   209  0018                     _RCSTAbits	set	24
   210  0006                     _PORTB	set	6
   211  0005                     _PORTA	set	5
   212  0064                     _TXIF	set	100
   213  0065                     _RCIF	set	101
   214  009A                     _SPBRGH	set	154
   215  0099                     _SPBRG	set	153
   216  0098                     _TXSTAbits	set	152
   217  008F                     _OSCCONbits	set	143
   218  0086                     _TRISB	set	134
   219  0085                     _TRISA	set	133
   220  0187                     _BAUDCTLbits	set	391
   221  0189                     _ANSELH	set	393
   222  0188                     _ANSEL	set	392
   223                           
   224                           	psect	strings
   225  0003                     __pstrings:
   226  0003                     stringtab:
   227  0003                     __stringtab:
   228                           
   229                           ;	String table - string pointers are 2 bytes each
   230  0003  1BFF               	btfsc	btemp+1,7
   231  0004  280D               	ljmp	stringcode
   232  0005  1383               	bcf	3,7
   233  0006  187F               	btfsc	btemp+1,0
   234  0007  1783               	bsf	3,7
   235  0008  0800               	movf	0,w
   236  0009  0A84               	incf	4,f
   237  000A  1903               	skipnz
   238  000B  0AFF               	incf	btemp+1,f
   239  000C  0008               	return
   240  000D                     stringcode:
   241  000D  087F               	movf	btemp+1,w
   242  000E  397F               	andlw	127
   243  000F  008A               	movwf	10
   244  0010  0804               	movf	4,w
   245  0011  0A84               	incf	4,f
   246  0012  1903               	skipnz
   247  0013  0AFF               	incf	btemp+1,f
   248  0014  0082               	movwf	2
   249  0015                     __stringbase:
   250  0015                     __end_of__stringtab:
   251                           
   252                           	psect	stringtext
   253  0800                     __pstringtext:
   254  0800                     STR_6:
   255  0800  340D               	retlw	13
   256  0801  3420               	retlw	32	;' '
   257  0802  3453               	retlw	83	;'S'
   258  0803  3465               	retlw	101	;'e'
   259  0804  346C               	retlw	108	;'l'
   260  0805  3465               	retlw	101	;'e'
   261  0806  3463               	retlw	99	;'c'
   262  0807  3463               	retlw	99	;'c'
   263  0808  3469               	retlw	105	;'i'
   264  0809  346F               	retlw	111	;'o'
   265  080A  346E               	retlw	110	;'n'
   266  080B  3461               	retlw	97	;'a'
   267  080C  3472               	retlw	114	;'r'
   268  080D  3420               	retlw	32	;' '
   269  080E  3465               	retlw	101	;'e'
   270  080F  346C               	retlw	108	;'l'
   271  0810  3420               	retlw	32	;' '
   272  0811  3463               	retlw	99	;'c'
   273  0812  3461               	retlw	97	;'a'
   274  0813  3472               	retlw	114	;'r'
   275  0814  3461               	retlw	97	;'a'
   276  0815  3463               	retlw	99	;'c'
   277  0816  3474               	retlw	116	;'t'
   278  0817  3465               	retlw	101	;'e'
   279  0818  3472               	retlw	114	;'r'
   280  0819  3420               	retlw	32	;' '
   281  081A  3461               	retlw	97	;'a'
   282  081B  3420               	retlw	32	;' '
   283  081C  3464               	retlw	100	;'d'
   284  081D  3465               	retlw	101	;'e'
   285  081E  3473               	retlw	115	;'s'
   286  081F  3470               	retlw	112	;'p'
   287  0820  346C               	retlw	108	;'l'
   288  0821  3465               	retlw	101	;'e'
   289  0822  3467               	retlw	103	;'g'
   290  0823  3461               	retlw	97	;'a'
   291  0824  3472               	retlw	114	;'r'
   292  0825  3420               	retlw	32	;' '
   293  0826  3465               	retlw	101	;'e'
   294  0827  346E               	retlw	110	;'n'
   295  0828  3420               	retlw	32	;' '
   296  0829  3450               	retlw	80	;'P'
   297  082A  344F               	retlw	79	;'O'
   298  082B  3452               	retlw	82	;'R'
   299  082C  3454               	retlw	84	;'T'
   300  082D  3441               	retlw	65	;'A'
   301  082E  343A               	retlw	58	;':'
   302  082F  3420               	retlw	32	;' '
   303  0830  340D               	retlw	13
   304  0831  3400               	retlw	0
   305  0832                     STR_7:
   306  0832  340D               	retlw	13
   307  0833  3420               	retlw	32	;' '
   308  0834  3453               	retlw	83	;'S'
   309  0835  3465               	retlw	101	;'e'
   310  0836  346C               	retlw	108	;'l'
   311  0837  3465               	retlw	101	;'e'
   312  0838  3463               	retlw	99	;'c'
   313  0839  3463               	retlw	99	;'c'
   314  083A  3469               	retlw	105	;'i'
   315  083B  346F               	retlw	111	;'o'
   316  083C  346E               	retlw	110	;'n'
   317  083D  3461               	retlw	97	;'a'
   318  083E  3472               	retlw	114	;'r'
   319  083F  3420               	retlw	32	;' '
   320  0840  3465               	retlw	101	;'e'
   321  0841  346C               	retlw	108	;'l'
   322  0842  3420               	retlw	32	;' '
   323  0843  3463               	retlw	99	;'c'
   324  0844  3461               	retlw	97	;'a'
   325  0845  3472               	retlw	114	;'r'
   326  0846  3461               	retlw	97	;'a'
   327  0847  3463               	retlw	99	;'c'
   328  0848  3474               	retlw	116	;'t'
   329  0849  3465               	retlw	101	;'e'
   330  084A  3472               	retlw	114	;'r'
   331  084B  3420               	retlw	32	;' '
   332  084C  3461               	retlw	97	;'a'
   333  084D  3420               	retlw	32	;' '
   334  084E  3464               	retlw	100	;'d'
   335  084F  3465               	retlw	101	;'e'
   336  0850  3473               	retlw	115	;'s'
   337  0851  3470               	retlw	112	;'p'
   338  0852  346C               	retlw	108	;'l'
   339  0853  3465               	retlw	101	;'e'
   340  0854  3467               	retlw	103	;'g'
   341  0855  3461               	retlw	97	;'a'
   342  0856  3472               	retlw	114	;'r'
   343  0857  3420               	retlw	32	;' '
   344  0858  3465               	retlw	101	;'e'
   345  0859  346E               	retlw	110	;'n'
   346  085A  3420               	retlw	32	;' '
   347  085B  3450               	retlw	80	;'P'
   348  085C  344F               	retlw	79	;'O'
   349  085D  3452               	retlw	82	;'R'
   350  085E  3454               	retlw	84	;'T'
   351  085F  3442               	retlw	66	;'B'
   352  0860  343A               	retlw	58	;':'
   353  0861  3420               	retlw	32	;' '
   354  0862  340D               	retlw	13
   355  0863  3400               	retlw	0
   356  0864                     STR_5:
   357  0864  340D               	retlw	13
   358  0865  3420               	retlw	32	;' '
   359  0866  3443               	retlw	67	;'C'
   360  0867  3461               	retlw	97	;'a'
   361  0868  3472               	retlw	114	;'r'
   362  0869  3467               	retlw	103	;'g'
   363  086A  3461               	retlw	97	;'a'
   364  086B  346E               	retlw	110	;'n'
   365  086C  3464               	retlw	100	;'d'
   366  086D  346F               	retlw	111	;'o'
   367  086E  3420               	retlw	32	;' '
   368  086F  346C               	retlw	108	;'l'
   369  0870  3461               	retlw	97	;'a'
   370  0871  3420               	retlw	32	;' '
   371  0872  3463               	retlw	99	;'c'
   372  0873  3461               	retlw	97	;'a'
   373  0874  3464               	retlw	100	;'d'
   374  0875  3465               	retlw	101	;'e'
   375  0876  346E               	retlw	110	;'n'
   376  0877  3461               	retlw	97	;'a'
   377  0878  3420               	retlw	32	;' '
   378  0879  3464               	retlw	100	;'d'
   379  087A  3465               	retlw	101	;'e'
   380  087B  3420               	retlw	32	;' '
   381  087C  3463               	retlw	99	;'c'
   382  087D  3461               	retlw	97	;'a'
   383  087E  3472               	retlw	114	;'r'
   384  087F  3461               	retlw	97	;'a'
   385  0880  3463               	retlw	99	;'c'
   386  0881  3474               	retlw	116	;'t'
   387  0882  3465               	retlw	101	;'e'
   388  0883  3472               	retlw	114	;'r'
   389  0884  3465               	retlw	101	;'e'
   390  0885  3473               	retlw	115	;'s'
   391  0886  342E               	retlw	46	;'.'
   392  0887  342E               	retlw	46	;'.'
   393  0888  342E               	retlw	46	;'.'
   394  0889  342E               	retlw	46	;'.'
   395  088A  342E               	retlw	46	;'.'
   396  088B  342E               	retlw	46	;'.'
   397  088C  3420               	retlw	32	;' '
   398  088D  340D               	retlw	13
   399  088E  3400               	retlw	0
   400  088F                     STR_1:
   401  088F  340D               	retlw	13
   402  0890  3420               	retlw	32	;' '
   403  0891  3445               	retlw	69	;'E'
   404  0892  346C               	retlw	108	;'l'
   405  0893  3469               	retlw	105	;'i'
   406  0894  3467               	retlw	103	;'g'
   407  0895  3461               	retlw	97	;'a'
   408  0896  3420               	retlw	32	;' '
   409  0897  3471               	retlw	113	;'q'
   410  0898  3475               	retlw	117	;'u'
   411  0899  3465               	retlw	101	;'e'
   412  089A  3420               	retlw	32	;' '
   413  089B  3461               	retlw	97	;'a'
   414  089C  3463               	retlw	99	;'c'
   415  089D  3463               	retlw	99	;'c'
   416  089E  3469               	retlw	105	;'i'
   417  089F  346F               	retlw	111	;'o'
   418  08A0  346E               	retlw	110	;'n'
   419  08A1  3420               	retlw	32	;' '
   420  08A2  3464               	retlw	100	;'d'
   421  08A3  3465               	retlw	101	;'e'
   422  08A4  3473               	retlw	115	;'s'
   423  08A5  3465               	retlw	101	;'e'
   424  08A6  3461               	retlw	97	;'a'
   425  08A7  3420               	retlw	32	;' '
   426  08A8  3465               	retlw	101	;'e'
   427  08A9  346A               	retlw	106	;'j'
   428  08AA  3465               	retlw	101	;'e'
   429  08AB  3463               	retlw	99	;'c'
   430  08AC  3475               	retlw	117	;'u'
   431  08AD  3474               	retlw	116	;'t'
   432  08AE  3461               	retlw	97	;'a'
   433  08AF  3472               	retlw	114	;'r'
   434  08B0  343A               	retlw	58	;':'
   435  08B1  3420               	retlw	32	;' '
   436  08B2  340D               	retlw	13
   437  08B3  3400               	retlw	0
   438  08B4                     STR_2:
   439  08B4  3420               	retlw	32	;' '
   440  08B5  3431               	retlw	49	;'1'
   441  08B6  342E               	retlw	46	;'.'
   442  08B7  3420               	retlw	32	;' '
   443  08B8  3444               	retlw	68	;'D'
   444  08B9  3465               	retlw	101	;'e'
   445  08BA  3473               	retlw	115	;'s'
   446  08BB  3470               	retlw	112	;'p'
   447  08BC  346C               	retlw	108	;'l'
   448  08BD  3465               	retlw	101	;'e'
   449  08BE  3467               	retlw	103	;'g'
   450  08BF  3461               	retlw	97	;'a'
   451  08C0  3472               	retlw	114	;'r'
   452  08C1  3420               	retlw	32	;' '
   453  08C2  3463               	retlw	99	;'c'
   454  08C3  3461               	retlw	97	;'a'
   455  08C4  3464               	retlw	100	;'d'
   456  08C5  3465               	retlw	101	;'e'
   457  08C6  346E               	retlw	110	;'n'
   458  08C7  3461               	retlw	97	;'a'
   459  08C8  3420               	retlw	32	;' '
   460  08C9  3464               	retlw	100	;'d'
   461  08CA  3465               	retlw	101	;'e'
   462  08CB  3420               	retlw	32	;' '
   463  08CC  3463               	retlw	99	;'c'
   464  08CD  3461               	retlw	97	;'a'
   465  08CE  3472               	retlw	114	;'r'
   466  08CF  3461               	retlw	97	;'a'
   467  08D0  3463               	retlw	99	;'c'
   468  08D1  3474               	retlw	116	;'t'
   469  08D2  3465               	retlw	101	;'e'
   470  08D3  3472               	retlw	114	;'r'
   471  08D4  3465               	retlw	101	;'e'
   472  08D5  3473               	retlw	115	;'s'
   473  08D6  3420               	retlw	32	;' '
   474  08D7  340D               	retlw	13
   475  08D8  3400               	retlw	0
   476  08D9                     STR_3:
   477  08D9  3420               	retlw	32	;' '
   478  08DA  3432               	retlw	50	;'2'
   479  08DB  342E               	retlw	46	;'.'
   480  08DC  3420               	retlw	32	;' '
   481  08DD  3443               	retlw	67	;'C'
   482  08DE  3461               	retlw	97	;'a'
   483  08DF  346D               	retlw	109	;'m'
   484  08E0  3462               	retlw	98	;'b'
   485  08E1  3469               	retlw	105	;'i'
   486  08E2  3461               	retlw	97	;'a'
   487  08E3  3472               	retlw	114	;'r'
   488  08E4  3420               	retlw	32	;' '
   489  08E5  3450               	retlw	80	;'P'
   490  08E6  344F               	retlw	79	;'O'
   491  08E7  3452               	retlw	82	;'R'
   492  08E8  3454               	retlw	84	;'T'
   493  08E9  3441               	retlw	65	;'A'
   494  08EA  3420               	retlw	32	;' '
   495  08EB  340D               	retlw	13
   496  08EC  3400               	retlw	0
   497  08ED                     STR_4:
   498  08ED  3420               	retlw	32	;' '
   499  08EE  3433               	retlw	51	;'3'
   500  08EF  342E               	retlw	46	;'.'
   501  08F0  3420               	retlw	32	;' '
   502  08F1  3443               	retlw	67	;'C'
   503  08F2  3461               	retlw	97	;'a'
   504  08F3  346D               	retlw	109	;'m'
   505  08F4  3462               	retlw	98	;'b'
   506  08F5  3469               	retlw	105	;'i'
   507  08F6  3461               	retlw	97	;'a'
   508  08F7  3472               	retlw	114	;'r'
   509  08F8  3420               	retlw	32	;' '
   510  08F9  3450               	retlw	80	;'P'
   511  08FA  344F               	retlw	79	;'O'
   512  08FB  3452               	retlw	82	;'R'
   513  08FC  3454               	retlw	84	;'T'
   514  08FD  3442               	retlw	66	;'B'
   515  08FE  3420               	retlw	32	;' '
   516  08FF  340D               	retlw	13
   517  0900  3400               	retlw	0
   518                           
   519                           	psect	cinit
   520  07FC                     start_initialization:	
   521                           ; #config settings
   522                           
   523  07FC                     __initialization:
   524  07FC                     end_of_initialization:	
   525                           ;End of C runtime variable initialization code
   526                           
   527  07FC                     __end_of__initialization:
   528  07FC  0183               	clrf	3
   529  07FD  120A  118A  2EF4   	ljmp	_main	;jump to C main() function
   530                           
   531                           	psect	cstackCOMMON
   532  0070                     __pcstackCOMMON:
   533  0070                     ?_config:
   534  0070                     ??_config:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_texto:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_main:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_putch:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ??_putch:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     putch@data:	
   550                           ; 1 bytes @ 0x0
   551                           
   552                           
   553                           ; 1 bytes @ 0x0
   554  0070                     	ds	1
   555  0071                     ?_printf:
   556  0071                     printf@f:	
   557                           ; 2 bytes @ 0x1
   558                           
   559                           
   560                           ; 2 bytes @ 0x1
   561  0071                     	ds	2
   562  0073                     ??_printf:
   563                           
   564                           ; 1 bytes @ 0x3
   565  0073                     	ds	3
   566  0076                     printf@ap:
   567                           
   568                           ; 1 bytes @ 0x6
   569  0076                     	ds	1
   570  0077                     printf@c:
   571                           
   572                           ; 1 bytes @ 0x7
   573  0077                     	ds	1
   574  0078                     ??_texto:
   575                           
   576                           ; 1 bytes @ 0x8
   577  0078                     	ds	3
   578  007B                     ??_main:
   579                           
   580                           	psect	maintext
   581  06F4                     __pmaintext:	
   582                           ; 1 bytes @ 0xB
   583 ;;
   584 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   585 ;;
   586 ;; *************** function _main *****************
   587 ;; Defined at:
   588 ;;		line 37 in file "main10casa.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;		None
   593 ;; Return value:  Size  Location     Type
   594 ;;                  1    wreg      void 
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : B00/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0
   603 ;;      Locals:         0       0       0       0       0
   604 ;;      Temps:          0       0       0       0       0
   605 ;;      Totals:         0       0       0       0       0
   606 ;;Total ram usage:        0 bytes
   607 ;; Hardware stack levels required when called:    3
   608 ;; This function calls:
   609 ;;		_config
   610 ;;		_texto
   611 ;; This function is called by:
   612 ;;		Startup code after reset
   613 ;; This function uses a non-reentrant model
   614 ;;
   615                           
   616                           
   617                           ;psect for function _main
   618  06F4                     _main:
   619  06F4                     l791:	
   620                           ;incstack = 0
   621                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   622                           
   623                           
   624                           ;main10casa.c: 38:     config();
   625  06F4  120A  118A  2728  120A  118A  	fcall	_config
   626  06F9                     l793:
   627                           
   628                           ;main10casa.c: 40:         texto();
   629  06F9  120A  118A  2751  120A  118A  	fcall	_texto
   630  06FE  2EF9               	goto	l793
   631  06FF  120A  118A  2800   	ljmp	start
   632  0702                     __end_of_main:
   633                           
   634                           	psect	text1
   635  0751                     __ptext1:	
   636 ;; *************** function _texto *****************
   637 ;; Defined at:
   638 ;;		line 82 in file "main10casa.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   652 ;;      Params:         0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0
   654 ;;      Temps:          3       0       0       0       0
   655 ;;      Totals:         3       0       0       0       0
   656 ;;Total ram usage:        3 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    2
   659 ;; This function calls:
   660 ;;		_printf
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           
   667                           ;psect for function _texto
   668  0751                     _texto:
   669  0751                     l761:	
   670                           ;incstack = 0
   671                           ; Regs used in _texto: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   672                           
   673                           
   674                           ;main10casa.c: 83:     _delay((unsigned long)((250)*(8000000/4000.0)));
   675  0751  3003               	movlw	3
   676  0752  00FA               	movwf	??_texto+2
   677  0753  308A               	movlw	138
   678  0754  00F9               	movwf	??_texto+1
   679  0755  3055               	movlw	85
   680  0756  00F8               	movwf	??_texto
   681  0757                     u167:
   682  0757  0BF8               	decfsz	??_texto,f
   683  0758  2F57               	goto	u167
   684  0759  0BF9               	decfsz	??_texto+1,f
   685  075A  2F57               	goto	u167
   686  075B  0BFA               	decfsz	??_texto+2,f
   687  075C  2F57               	goto	u167
   688  075D  2F5E               	nop2
   689  075E                     l763:
   690                           
   691                           ;main10casa.c: 84:     printf("\r Eliga que accion desea ejecutar: \r");
   692  075E  308F               	movlw	low (STR_1| (0+32768))
   693  075F  00F1               	movwf	printf@f
   694  0760  3088               	movlw	high (STR_1| (0+32768))
   695  0761  00F2               	movwf	printf@f+1
   696  0762  120A  118A  2702  120A  118A  	fcall	_printf
   697  0767                     l765:
   698                           
   699                           ;main10casa.c: 85:     _delay((unsigned long)((250)*(8000000/4000.0)));
   700  0767  3003               	movlw	3
   701  0768  00FA               	movwf	??_texto+2
   702  0769  308A               	movlw	138
   703  076A  00F9               	movwf	??_texto+1
   704  076B  3055               	movlw	85
   705  076C  00F8               	movwf	??_texto
   706  076D                     u177:
   707  076D  0BF8               	decfsz	??_texto,f
   708  076E  2F6D               	goto	u177
   709  076F  0BF9               	decfsz	??_texto+1,f
   710  0770  2F6D               	goto	u177
   711  0771  0BFA               	decfsz	??_texto+2,f
   712  0772  2F6D               	goto	u177
   713  0773  2F74               	nop2
   714                           
   715                           ;main10casa.c: 86:     printf(" 1. Desplegar cadena de caracteres \r");
   716  0774  30B4               	movlw	low (STR_2| (0+32768))
   717  0775  00F1               	movwf	printf@f
   718  0776  3088               	movlw	high (STR_2| (0+32768))
   719  0777  00F2               	movwf	printf@f+1
   720  0778  120A  118A  2702  120A  118A  	fcall	_printf
   721  077D                     l767:
   722                           
   723                           ;main10casa.c: 87:     _delay((unsigned long)((250)*(8000000/4000.0)));
   724  077D  3003               	movlw	3
   725  077E  00FA               	movwf	??_texto+2
   726  077F  308A               	movlw	138
   727  0780  00F9               	movwf	??_texto+1
   728  0781  3055               	movlw	85
   729  0782  00F8               	movwf	??_texto
   730  0783                     u187:
   731  0783  0BF8               	decfsz	??_texto,f
   732  0784  2F83               	goto	u187
   733  0785  0BF9               	decfsz	??_texto+1,f
   734  0786  2F83               	goto	u187
   735  0787  0BFA               	decfsz	??_texto+2,f
   736  0788  2F83               	goto	u187
   737  0789  2F8A               	nop2
   738  078A                     l769:
   739                           
   740                           ;main10casa.c: 88:     printf(" 2. Cambiar PORTA \r");
   741  078A  30D9               	movlw	low (STR_3| (0+32768))
   742  078B  00F1               	movwf	printf@f
   743  078C  3088               	movlw	high (STR_3| (0+32768))
   744  078D  00F2               	movwf	printf@f+1
   745  078E  120A  118A  2702  120A  118A  	fcall	_printf
   746                           
   747                           ;main10casa.c: 89:     _delay((unsigned long)((250)*(8000000/4000.0)));
   748  0793  3003               	movlw	3
   749  0794  00FA               	movwf	??_texto+2
   750  0795  308A               	movlw	138
   751  0796  00F9               	movwf	??_texto+1
   752  0797  3055               	movlw	85
   753  0798  00F8               	movwf	??_texto
   754  0799                     u197:
   755  0799  0BF8               	decfsz	??_texto,f
   756  079A  2F99               	goto	u197
   757  079B  0BF9               	decfsz	??_texto+1,f
   758  079C  2F99               	goto	u197
   759  079D  0BFA               	decfsz	??_texto+2,f
   760  079E  2F99               	goto	u197
   761  079F  2FA0               	nop2
   762  07A0                     l771:
   763                           
   764                           ;main10casa.c: 90:     printf(" 3. Cambiar PORTB \r");
   765  07A0  30ED               	movlw	low (STR_4| (0+32768))
   766  07A1  00F1               	movwf	printf@f
   767  07A2  3088               	movlw	high (STR_4| (0+32768))
   768  07A3  00F2               	movwf	printf@f+1
   769  07A4  120A  118A  2702  120A  118A  	fcall	_printf
   770  07A9                     l56:	
   771                           ;main10casa.c: 91:     while (RCIF == 0);
   772                           
   773  07A9  1283               	bcf	3,5	;RP0=0, select bank0
   774  07AA  1303               	bcf	3,6	;RP1=0, select bank0
   775  07AB  1E8C               	btfss	12,5	;volatile
   776  07AC  2FAE               	goto	u101
   777  07AD  2FAF               	goto	u100
   778  07AE                     u101:
   779  07AE  2FA9               	goto	l56
   780  07AF                     u100:
   781  07AF                     l773:
   782                           
   783                           ;main10casa.c: 92:     if (RCREG == '1'){
   784  07AF  3031               	movlw	49
   785  07B0  061A               	xorwf	26,w	;volatile
   786  07B1  1D03               	btfss	3,2
   787  07B2  2FB4               	goto	u111
   788  07B3  2FB5               	goto	u110
   789  07B4                     u111:
   790  07B4  2FCB               	goto	l779
   791  07B5                     u110:
   792  07B5                     l775:
   793                           
   794                           ;main10casa.c: 93:         _delay((unsigned long)((500)*(8000000/4000.0)));
   795  07B5  3006               	movlw	6
   796  07B6  00FA               	movwf	??_texto+2
   797  07B7  3013               	movlw	19
   798  07B8  00F9               	movwf	??_texto+1
   799  07B9  30AD               	movlw	173
   800  07BA  00F8               	movwf	??_texto
   801  07BB                     u207:
   802  07BB  0BF8               	decfsz	??_texto,f
   803  07BC  2FBB               	goto	u207
   804  07BD  0BF9               	decfsz	??_texto+1,f
   805  07BE  2FBB               	goto	u207
   806  07BF  0BFA               	decfsz	??_texto+2,f
   807  07C0  2FBB               	goto	u207
   808  07C1  2FC2               	nop2
   809  07C2                     l777:
   810                           
   811                           ;main10casa.c: 94:         printf("\r Cargando la cadena de caracteres...... \r");
   812  07C2  3064               	movlw	low (STR_5| (0+32768))
   813  07C3  00F1               	movwf	printf@f
   814  07C4  3088               	movlw	high (STR_5| (0+32768))
   815  07C5  00F2               	movwf	printf@f+1
   816  07C6  120A  118A  2702  120A  118A  	fcall	_printf
   817  07CB                     l779:
   818                           
   819                           ;main10casa.c: 96:     if (RCREG == '2'){
   820  07CB  3032               	movlw	50
   821  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   822  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   823  07CE  061A               	xorwf	26,w	;volatile
   824  07CF  1D03               	btfss	3,2
   825  07D0  2FD2               	goto	u121
   826  07D1  2FD3               	goto	u120
   827  07D2                     u121:
   828  07D2  2FE4               	goto	l785
   829  07D3                     u120:
   830  07D3                     l781:
   831                           
   832                           ;main10casa.c: 97:         printf("\r Seleccionar el caracter a desplegar en PORTA: \r")
      +                          ;
   833  07D3  3000               	movlw	low (STR_6| (0+32768))
   834  07D4  00F1               	movwf	printf@f
   835  07D5  3088               	movlw	high (STR_6| (0+32768))
   836  07D6  00F2               	movwf	printf@f+1
   837  07D7  120A  118A  2702  120A  118A  	fcall	_printf
   838  07DC                     l61:	
   839                           ;main10casa.c: 98:         while (RCIF == 0);
   840                           
   841  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   842  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   843  07DE  1E8C               	btfss	12,5	;volatile
   844  07DF  2FE1               	goto	u131
   845  07E0  2FE2               	goto	u130
   846  07E1                     u131:
   847  07E1  2FDC               	goto	l61
   848  07E2                     u130:
   849  07E2                     l783:
   850                           
   851                           ;main10casa.c: 99:         PORTA = RCREG;
   852  07E2  081A               	movf	26,w	;volatile
   853  07E3  0085               	movwf	5	;volatile
   854  07E4                     l785:
   855                           
   856                           ;main10casa.c: 101:     if (RCREG == '3'){
   857  07E4  3033               	movlw	51
   858  07E5  061A               	xorwf	26,w	;volatile
   859  07E6  1D03               	btfss	3,2
   860  07E7  2FE9               	goto	u141
   861  07E8  2FEA               	goto	u140
   862  07E9                     u141:
   863  07E9  2FFB               	goto	l69
   864  07EA                     u140:
   865  07EA                     l787:
   866                           
   867                           ;main10casa.c: 102:         printf("\r Seleccionar el caracter a desplegar en PORTB: \r"
      +                          );
   868  07EA  3032               	movlw	low (STR_7| (0+32768))
   869  07EB  00F1               	movwf	printf@f
   870  07EC  3088               	movlw	high (STR_7| (0+32768))
   871  07ED  00F2               	movwf	printf@f+1
   872  07EE  120A  118A  2702  120A  118A  	fcall	_printf
   873  07F3                     l65:	
   874                           ;main10casa.c: 103:         while (RCIF == 0);
   875                           
   876  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   877  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   878  07F5  1E8C               	btfss	12,5	;volatile
   879  07F6  2FF8               	goto	u151
   880  07F7  2FF9               	goto	u150
   881  07F8                     u151:
   882  07F8  2FF3               	goto	l65
   883  07F9                     u150:
   884  07F9                     l789:
   885                           
   886                           ;main10casa.c: 104:         PORTB = RCREG;
   887  07F9  081A               	movf	26,w	;volatile
   888  07FA  0086               	movwf	6	;volatile
   889  07FB                     l69:	
   890                           ;main10casa.c: 105:     }
   891                           
   892  07FB  0008               	return
   893  07FC                     __end_of_texto:
   894                           
   895                           	psect	text2
   896  0702                     __ptext2:	
   897 ;; *************** function _printf *****************
   898 ;; Defined at:
   899 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  f               2    1[COMMON] PTR const unsigned char 
   902 ;;		 -> STR_7(50), STR_6(50), STR_5(43), STR_4(20), 
   903 ;;		 -> STR_3(20), STR_2(37), STR_1(37), 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  tmpval          4    0        struct .
   906 ;;  cp              2    0        PTR const unsigned char 
   907 ;;  len             2    0        unsigned int 
   908 ;;  val             2    0        unsigned int 
   909 ;;  c               1    7[COMMON] unsigned char 
   910 ;;  ap              1    6[COMMON] PTR void [1]
   911 ;;		 -> ?_printf(2), 
   912 ;;  flag            1    0        unsigned char 
   913 ;;  prec            1    0        char 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2    1[COMMON] int 
   916 ;; Registers used:
   917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         2       0       0       0       0
   924 ;;      Locals:         2       0       0       0       0
   925 ;;      Temps:          3       0       0       0       0
   926 ;;      Totals:         7       0       0       0       0
   927 ;;Total ram usage:        7 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    1
   930 ;; This function calls:
   931 ;;		_putch
   932 ;; This function is called by:
   933 ;;		_texto
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function _printf
   939  0702                     _printf:
   940  0702                     l755:	
   941                           ;incstack = 0
   942                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   943                           
   944                           
   945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
   946  0702  3073               	movlw	(low ((?_printf| 0+2)))& (0+255)
   947  0703  00F3               	movwf	??_printf
   948  0704  0873               	movf	??_printf,w
   949  0705  00F6               	movwf	printf@ap
   950                           
   951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   952  0706  2F0D               	goto	l759
   953  0707                     l757:
   954                           
   955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
   956  0707  0877               	movf	printf@c,w
   957  0708  120A  118A  26EA  120A  118A  	fcall	_putch
   958  070D                     l759:	
   959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   960                           
   961                           
   962                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   963  070D  0872               	movf	printf@f+1,w
   964  070E  00F4               	movwf	??_printf+1
   965  070F  0871               	movf	printf@f,w
   966  0710  00F3               	movwf	??_printf
   967  0711  0AF1               	incf	printf@f,f
   968  0712  1903               	skipnz
   969  0713  0AF2               	incf	printf@f+1,f
   970  0714  0874               	movf	??_printf+1,w
   971  0715  1283               	bcf	3,5	;RP0=0, select bank0
   972  0716  1303               	bcf	3,6	;RP1=0, select bank0
   973  0717  00FF               	movwf	btemp+1
   974  0718  0873               	movf	??_printf,w
   975  0719  0084               	movwf	4
   976  071A  120A  118A  2003  120A  118A  	fcall	stringtab
   977  071F  00F5               	movwf	??_printf+2
   978  0720  0875               	movf	??_printf+2,w
   979  0721  00F7               	movwf	printf@c
   980  0722  0877               	movf	printf@c,w
   981  0723  1D03               	btfss	3,2
   982  0724  2F26               	goto	u91
   983  0725  2F27               	goto	u90
   984  0726                     u91:
   985  0726  2F07               	goto	l757
   986  0727                     u90:
   987  0727                     l167:
   988  0727  0008               	return
   989  0728                     __end_of_printf:
   990                           
   991                           	psect	text3
   992  06EA                     __ptext3:	
   993 ;; *************** function _putch *****************
   994 ;; Defined at:
   995 ;;		line 112 in file "main10casa.c"
   996 ;; Parameters:    Size  Location     Type
   997 ;;  data            1    wreg     unsigned char 
   998 ;; Auto vars:     Size  Location     Type
   999 ;;  data            1    0[COMMON] unsigned char 
  1000 ;; Return value:  Size  Location     Type
  1001 ;;                  1    wreg      void 
  1002 ;; Registers used:
  1003 ;;		wreg
  1004 ;; Tracked objects:
  1005 ;;		On entry : 0/0
  1006 ;;		On exit  : 0/0
  1007 ;;		Unchanged: 0/0
  1008 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1009 ;;      Params:         0       0       0       0       0
  1010 ;;      Locals:         1       0       0       0       0
  1011 ;;      Temps:          0       0       0       0       0
  1012 ;;      Totals:         1       0       0       0       0
  1013 ;;Total ram usage:        1 bytes
  1014 ;; Hardware stack levels used:    1
  1015 ;; This function calls:
  1016 ;;		Nothing
  1017 ;; This function is called by:
  1018 ;;		_printf
  1019 ;; This function uses a non-reentrant model
  1020 ;;
  1021                           
  1022                           
  1023                           ;psect for function _putch
  1024  06EA                     _putch:
  1025                           
  1026                           ;incstack = 0
  1027                           ; Regs used in _putch: [wreg]
  1028                           ;putch@data stored from wreg
  1029  06EA  00F0               	movwf	putch@data
  1030  06EB                     l677:
  1031  06EB                     l72:	
  1032                           ;main10casa.c: 113:     while(TXIF == 0);
  1033                           
  1034  06EB  1283               	bcf	3,5	;RP0=0, select bank0
  1035  06EC  1303               	bcf	3,6	;RP1=0, select bank0
  1036  06ED  1E0C               	btfss	12,4	;volatile
  1037  06EE  2EF0               	goto	u11
  1038  06EF  2EF1               	goto	u10
  1039  06F0                     u11:
  1040  06F0  2EEB               	goto	l72
  1041  06F1                     u10:
  1042  06F1                     l679:
  1043                           
  1044                           ;main10casa.c: 114:     TXREG = data;
  1045  06F1  0870               	movf	putch@data,w
  1046  06F2  0099               	movwf	25	;volatile
  1047  06F3                     l75:
  1048  06F3  0008               	return
  1049  06F4                     __end_of_putch:
  1050                           
  1051                           	psect	text4
  1052  0728                     __ptext4:	
  1053 ;; *************** function _config *****************
  1054 ;; Defined at:
  1055 ;;		line 44 in file "main10casa.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;		None
  1058 ;; Auto vars:     Size  Location     Type
  1059 ;;		None
  1060 ;; Return value:  Size  Location     Type
  1061 ;;                  1    wreg      void 
  1062 ;; Registers used:
  1063 ;;		wreg, status,2
  1064 ;; Tracked objects:
  1065 ;;		On entry : 0/0
  1066 ;;		On exit  : 0/0
  1067 ;;		Unchanged: 0/0
  1068 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1069 ;;      Params:         0       0       0       0       0
  1070 ;;      Locals:         0       0       0       0       0
  1071 ;;      Temps:          0       0       0       0       0
  1072 ;;      Totals:         0       0       0       0       0
  1073 ;;Total ram usage:        0 bytes
  1074 ;; Hardware stack levels used:    1
  1075 ;; This function calls:
  1076 ;;		Nothing
  1077 ;; This function is called by:
  1078 ;;		_main
  1079 ;; This function uses a non-reentrant model
  1080 ;;
  1081                           
  1082                           
  1083                           ;psect for function _config
  1084  0728                     _config:
  1085  0728                     l689:	
  1086                           ;incstack = 0
  1087                           ; Regs used in _config: [wreg+status,2]
  1088                           
  1089                           
  1090                           ;main10casa.c: 46:     ANSEL = 0x00;
  1091  0728  1683               	bsf	3,5	;RP0=1, select bank3
  1092  0729  1703               	bsf	3,6	;RP1=1, select bank3
  1093  072A  0188               	clrf	8	;volatile
  1094                           
  1095                           ;main10casa.c: 47:     ANSELH = 0x00;
  1096  072B  0189               	clrf	9	;volatile
  1097                           
  1098                           ;main10casa.c: 49:     TRISA = 0x00;
  1099  072C  1683               	bsf	3,5	;RP0=1, select bank1
  1100  072D  1303               	bcf	3,6	;RP1=0, select bank1
  1101  072E  0185               	clrf	5	;volatile
  1102                           
  1103                           ;main10casa.c: 50:     TRISB = 0x00;
  1104  072F  0186               	clrf	6	;volatile
  1105                           
  1106                           ;main10casa.c: 52:     PORTA = 0x00;
  1107  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1108  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1109  0732  0185               	clrf	5	;volatile
  1110                           
  1111                           ;main10casa.c: 53:     PORTB = 0x00;
  1112  0733  0186               	clrf	6	;volatile
  1113  0734                     l691:
  1114                           
  1115                           ;main10casa.c: 55:     OSCCONbits.IRCF2 = 1;
  1116  0734  1683               	bsf	3,5	;RP0=1, select bank1
  1117  0735  1303               	bcf	3,6	;RP1=0, select bank1
  1118  0736  170F               	bsf	15,6	;volatile
  1119  0737                     l693:
  1120                           
  1121                           ;main10casa.c: 56:     OSCCONbits.IRCF1 = 1;
  1122  0737  168F               	bsf	15,5	;volatile
  1123  0738                     l695:
  1124                           
  1125                           ;main10casa.c: 57:     OSCCONbits.IRCF0 = 1;
  1126  0738  160F               	bsf	15,4	;volatile
  1127  0739                     l697:
  1128                           
  1129                           ;main10casa.c: 58:     OSCCONbits.SCS = 1;
  1130  0739  140F               	bsf	15,0	;volatile
  1131  073A                     l699:
  1132                           
  1133                           ;main10casa.c: 65:     TXSTAbits.SYNC = 0;
  1134  073A  1218               	bcf	24,4	;volatile
  1135  073B                     l701:
  1136                           
  1137                           ;main10casa.c: 66:     TXSTAbits.BRGH = 1;
  1138  073B  1518               	bsf	24,2	;volatile
  1139  073C                     l703:
  1140                           
  1141                           ;main10casa.c: 67:     BAUDCTLbits.BRG16 = 1;
  1142  073C  1683               	bsf	3,5	;RP0=1, select bank3
  1143  073D  1703               	bsf	3,6	;RP1=1, select bank3
  1144  073E  1587               	bsf	7,3	;volatile
  1145  073F                     l705:
  1146                           
  1147                           ;main10casa.c: 69:     SPBRG = 208;
  1148  073F  30D0               	movlw	208
  1149  0740  1683               	bsf	3,5	;RP0=1, select bank1
  1150  0741  1303               	bcf	3,6	;RP1=0, select bank1
  1151  0742  0099               	movwf	25	;volatile
  1152  0743                     l707:
  1153                           
  1154                           ;main10casa.c: 70:     SPBRGH = 0;
  1155  0743  019A               	clrf	26	;volatile
  1156  0744                     l709:
  1157                           
  1158                           ;main10casa.c: 72:     RCSTAbits.SPEN = 1;
  1159  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0746  1798               	bsf	24,7	;volatile
  1162  0747                     l711:
  1163                           
  1164                           ;main10casa.c: 73:     RCSTAbits.RX9 = 0;
  1165  0747  1318               	bcf	24,6	;volatile
  1166  0748                     l713:
  1167                           
  1168                           ;main10casa.c: 74:     RCSTAbits.CREN = 1;
  1169  0748  1618               	bsf	24,4	;volatile
  1170  0749                     l715:
  1171                           
  1172                           ;main10casa.c: 76:     TXSTAbits.TXEN = 1;
  1173  0749  1683               	bsf	3,5	;RP0=1, select bank1
  1174  074A  1303               	bcf	3,6	;RP1=0, select bank1
  1175  074B  1698               	bsf	24,5	;volatile
  1176  074C                     l717:
  1177                           
  1178                           ;main10casa.c: 78:     PIR1bits.RCIF = 0;
  1179  074C  1283               	bcf	3,5	;RP0=0, select bank0
  1180  074D  1303               	bcf	3,6	;RP1=0, select bank0
  1181  074E  128C               	bcf	12,5	;volatile
  1182  074F                     l719:
  1183                           
  1184                           ;main10casa.c: 79:     PIR1bits.TXIF = 0;
  1185  074F  120C               	bcf	12,4	;volatile
  1186  0750                     l53:
  1187  0750  0008               	return
  1188  0751                     __end_of_config:
  1189  007E                     btemp	set	126	;btemp
  1190  007E                     wtemp0	set	126
  1191                           
  1192                           	psect	config
  1193                           
  1194                           ;Config register CONFIG1 @ 0x2007
  1195                           ;	Oscillator Selection bits
  1196                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1197                           ;	Watchdog Timer Enable bit
  1198                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1199                           ;	Power-up Timer Enable bit
  1200                           ;	PWRTE = ON, PWRT enabled
  1201                           ;	RE3/MCLR pin function select bit
  1202                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1203                           ;	Code Protection bit
  1204                           ;	CP = OFF, Program memory code protection is disabled
  1205                           ;	Data Code Protection bit
  1206                           ;	CPD = OFF, Data memory code protection is disabled
  1207                           ;	Brown Out Reset Selection bits
  1208                           ;	BOREN = OFF, BOR disabled
  1209                           ;	Internal External Switchover bit
  1210                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1211                           ;	Fail-Safe Clock Monitor Enabled bit
  1212                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1213                           ;	Low Voltage Programming Enable bit
  1214                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1215                           ;	In-Circuit Debugger Mode bit
  1216                           ;	DEBUG = 0x1, unprogrammed default
  1217  2007                     	org	8199
  1218  2007  20C4               	dw	8388
  1219                           
  1220                           ;Config register CONFIG2 @ 0x2008
  1221                           ;	Brown-out Reset Selection bit
  1222                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1223                           ;	Flash Program Memory Self Write Enable bits
  1224                           ;	WRT = OFF, Write protection off
  1225  2008                     	org	8200
  1226  2008  3FFF               	dw	16383

Data Sizes:
    Strings     257
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 50
		 -> STR_7(CODE[50]), STR_6(CODE[50]), STR_5(CODE[43]), STR_4(CODE[20]), 
		 -> STR_3(CODE[20]), STR_2(CODE[37]), STR_1(CODE[37]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_texto
    _texto->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     593
                             _config
                              _texto
 ---------------------------------------------------------------------------------
 (1) _texto                                                3     3      0     593
                                              8 COMMON     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              19    17      2     593
                                              1 COMMON     7     5      2
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _config                                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _config
   _texto
     _printf
       _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 09 16:24:39 2021

                      pc 0002                       l53 0750                       l61 07DC  
                     l72 06EB                       l56 07A9                       l65 07F3  
                     l75 06F3                       l69 07FB                       u10 06F1  
                     u11 06F0                       u90 0727                       u91 0726  
                     fsr 0004                      l167 0727                      l701 073B  
                    l711 0747                      l703 073C                      l713 0748  
                    l705 073F                      l715 0749                      l707 0743  
                    l717 074C                      l709 0744                      l719 074F  
                    l761 0751                      l691 0734                      l755 0702  
                    l771 07A0                      l763 075E                      l693 0737  
                    l677 06EB                      l757 0707                      l781 07D3  
                    l773 07AF                      l765 0767                      l695 0738  
                    l679 06F1                      l759 070D                      l783 07E2  
                    l775 07B5                      l767 077D                      l791 06F4  
                    l697 0739                      l689 0728                      l785 07E4  
                    l777 07C2                      l769 078A                      l793 06F9  
                    l699 073A                      l787 07EA                      l779 07CB  
                    l789 07F9                      u100 07AF                      u101 07AE  
                    u110 07B5                      u111 07B4                      u120 07D3  
                    u121 07D2                      u130 07E2                      u131 07E1  
                    u140 07EA                      u141 07E9                      u150 07F9  
                    u151 07F8                      u207 07BB                      u167 0757  
                    u177 076D                      u187 0783                      u197 0799  
                    fsr0 0004                      indf 0000                     STR_1 088F  
                   STR_2 08B4                     STR_3 08D9                     STR_4 08ED  
                   STR_5 0864                     STR_6 0800                     STR_7 0832  
                   _RCIF 0065                     _TXIF 0064                     _main 06F4  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _ANSEL 0188                    _RCREG 001A                    _SPBRG 0099  
                  _PORTA 0005                    _PORTB 0006                    _TRISA 0085  
                  _TRISB 0086                    _TXREG 0019                    _texto 0751  
                  _putch 06EA                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 0702  
                 ??_main 007B                   ?_texto 0070                   ?_putch 0070  
                 _ANSELH 0189                   _SPBRGH 009A                   _config 0728  
                 _printf 0702  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_texto 07FC            __end_of_putch 06F4                  ??_texto 0078  
                ??_putch 0070               __pmaintext 06F4                  ?_config 0070  
                ?_printf 0071               __stringtab 0003          __size_of_config 0029  
                __ptext1 0751                  __ptext2 0702                  __ptext3 06EA  
                __ptext4 0728          __size_of_printf 0026     end_of_initialization 07FC  
              _RCSTAbits 0018                  printf@c 0077                  printf@f 0071  
           __pstringtext 0800                _TXSTAbits 0098              _BAUDCTLbits 0187  
         __end_of_config 0751           __end_of_printf 0728      start_initialization 07FC  
               ??_config 0070                 ??_printf 0073                ___latbits 0002  
              __pstrings 0003           __size_of_texto 00AB           __size_of_putch 000A  
               _PIR1bits 000C              __stringbase 0015       __end_of__stringtab 0015  
          __size_of_main 000E                putch@data 0070                stringcode 000D  
             _OSCCONbits 008F                 printf@ap 0076                 stringtab 0003  
